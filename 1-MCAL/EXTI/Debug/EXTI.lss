
EXTI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d12  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800060  00800060  00000d86  2**0
                  ALLOC
  2 .stab         00000ce4  00000000  00000000  00000d88  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000075f  00000000  00000000  00001a6c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 f4 05 	jmp	0xbe8	; 0xbe8 <__vector_1>
   8:	0c 94 04 06 	jmp	0xc08	; 0xc08 <__vector_2>
   c:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__vector_3>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 63 06 	call	0xcc6	; 0xcc6 <main>
  74:	0c 94 87 06 	jmp	0xd0e	; 0xd0e <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_voidSetPinDirection>:


                         /*************** PIN APIS ***************/

void DIO_voidSetPinDirection(u8 copy_u8PortId, u8 copy_u8PinId, u8 copy_u8PinDirection)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
  84:	27 97       	sbiw	r28, 0x07	; 7
  86:	0f b6       	in	r0, 0x3f	; 63
  88:	f8 94       	cli
  8a:	de bf       	out	0x3e, r29	; 62
  8c:	0f be       	out	0x3f, r0	; 63
  8e:	cd bf       	out	0x3d, r28	; 61
  90:	89 83       	std	Y+1, r24	; 0x01
  92:	6a 83       	std	Y+2, r22	; 0x02
  94:	4b 83       	std	Y+3, r20	; 0x03
	if(copy_u8PinId<=7)
  96:	8a 81       	ldd	r24, Y+2	; 0x02
  98:	88 30       	cpi	r24, 0x08	; 8
  9a:	08 f0       	brcs	.+2      	; 0x9e <DIO_voidSetPinDirection+0x22>
  9c:	ea c0       	rjmp	.+468    	; 0x272 <DIO_voidSetPinDirection+0x1f6>
	{
		if(copy_u8PinDirection == DIO_PIN_OUTPUT)
  9e:	8b 81       	ldd	r24, Y+3	; 0x03
  a0:	81 30       	cpi	r24, 0x01	; 1
  a2:	09 f0       	breq	.+2      	; 0xa6 <DIO_voidSetPinDirection+0x2a>
  a4:	6f c0       	rjmp	.+222    	; 0x184 <DIO_voidSetPinDirection+0x108>
			switch(copy_u8PortId)
  a6:	89 81       	ldd	r24, Y+1	; 0x01
  a8:	28 2f       	mov	r18, r24
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	3f 83       	std	Y+7, r19	; 0x07
  ae:	2e 83       	std	Y+6, r18	; 0x06
  b0:	8e 81       	ldd	r24, Y+6	; 0x06
  b2:	9f 81       	ldd	r25, Y+7	; 0x07
  b4:	81 30       	cpi	r24, 0x01	; 1
  b6:	91 05       	cpc	r25, r1
  b8:	49 f1       	breq	.+82     	; 0x10c <DIO_voidSetPinDirection+0x90>
  ba:	2e 81       	ldd	r18, Y+6	; 0x06
  bc:	3f 81       	ldd	r19, Y+7	; 0x07
  be:	22 30       	cpi	r18, 0x02	; 2
  c0:	31 05       	cpc	r19, r1
  c2:	2c f4       	brge	.+10     	; 0xce <DIO_voidSetPinDirection+0x52>
  c4:	8e 81       	ldd	r24, Y+6	; 0x06
  c6:	9f 81       	ldd	r25, Y+7	; 0x07
  c8:	00 97       	sbiw	r24, 0x00	; 0
  ca:	61 f0       	breq	.+24     	; 0xe4 <DIO_voidSetPinDirection+0x68>
  cc:	d2 c0       	rjmp	.+420    	; 0x272 <DIO_voidSetPinDirection+0x1f6>
  ce:	2e 81       	ldd	r18, Y+6	; 0x06
  d0:	3f 81       	ldd	r19, Y+7	; 0x07
  d2:	22 30       	cpi	r18, 0x02	; 2
  d4:	31 05       	cpc	r19, r1
  d6:	71 f1       	breq	.+92     	; 0x134 <DIO_voidSetPinDirection+0xb8>
  d8:	8e 81       	ldd	r24, Y+6	; 0x06
  da:	9f 81       	ldd	r25, Y+7	; 0x07
  dc:	83 30       	cpi	r24, 0x03	; 3
  de:	91 05       	cpc	r25, r1
  e0:	e9 f1       	breq	.+122    	; 0x15c <DIO_voidSetPinDirection+0xe0>
  e2:	c7 c0       	rjmp	.+398    	; 0x272 <DIO_voidSetPinDirection+0x1f6>
			{
			case DIO_PORTA:SET_BIT(DDRA,copy_u8PinId);break;
  e4:	aa e3       	ldi	r26, 0x3A	; 58
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	ea e3       	ldi	r30, 0x3A	; 58
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	80 81       	ld	r24, Z
  ee:	48 2f       	mov	r20, r24
  f0:	8a 81       	ldd	r24, Y+2	; 0x02
  f2:	28 2f       	mov	r18, r24
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	02 2e       	mov	r0, r18
  fc:	02 c0       	rjmp	.+4      	; 0x102 <DIO_voidSetPinDirection+0x86>
  fe:	88 0f       	add	r24, r24
 100:	99 1f       	adc	r25, r25
 102:	0a 94       	dec	r0
 104:	e2 f7       	brpl	.-8      	; 0xfe <DIO_voidSetPinDirection+0x82>
 106:	84 2b       	or	r24, r20
 108:	8c 93       	st	X, r24
 10a:	b3 c0       	rjmp	.+358    	; 0x272 <DIO_voidSetPinDirection+0x1f6>
			case DIO_PORTB:SET_BIT(DDRB,copy_u8PinId);break;
 10c:	a7 e3       	ldi	r26, 0x37	; 55
 10e:	b0 e0       	ldi	r27, 0x00	; 0
 110:	e7 e3       	ldi	r30, 0x37	; 55
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	80 81       	ld	r24, Z
 116:	48 2f       	mov	r20, r24
 118:	8a 81       	ldd	r24, Y+2	; 0x02
 11a:	28 2f       	mov	r18, r24
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 2e       	mov	r0, r18
 124:	02 c0       	rjmp	.+4      	; 0x12a <DIO_voidSetPinDirection+0xae>
 126:	88 0f       	add	r24, r24
 128:	99 1f       	adc	r25, r25
 12a:	0a 94       	dec	r0
 12c:	e2 f7       	brpl	.-8      	; 0x126 <DIO_voidSetPinDirection+0xaa>
 12e:	84 2b       	or	r24, r20
 130:	8c 93       	st	X, r24
 132:	9f c0       	rjmp	.+318    	; 0x272 <DIO_voidSetPinDirection+0x1f6>
			case DIO_PORTC:SET_BIT(DDRC,copy_u8PinId);break;
 134:	a4 e3       	ldi	r26, 0x34	; 52
 136:	b0 e0       	ldi	r27, 0x00	; 0
 138:	e4 e3       	ldi	r30, 0x34	; 52
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	80 81       	ld	r24, Z
 13e:	48 2f       	mov	r20, r24
 140:	8a 81       	ldd	r24, Y+2	; 0x02
 142:	28 2f       	mov	r18, r24
 144:	30 e0       	ldi	r19, 0x00	; 0
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	02 2e       	mov	r0, r18
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_voidSetPinDirection+0xd6>
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	0a 94       	dec	r0
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_voidSetPinDirection+0xd2>
 156:	84 2b       	or	r24, r20
 158:	8c 93       	st	X, r24
 15a:	8b c0       	rjmp	.+278    	; 0x272 <DIO_voidSetPinDirection+0x1f6>
			case DIO_PORTD:SET_BIT(DDRD,copy_u8PinId);break;
 15c:	a1 e3       	ldi	r26, 0x31	; 49
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	e1 e3       	ldi	r30, 0x31	; 49
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	80 81       	ld	r24, Z
 166:	48 2f       	mov	r20, r24
 168:	8a 81       	ldd	r24, Y+2	; 0x02
 16a:	28 2f       	mov	r18, r24
 16c:	30 e0       	ldi	r19, 0x00	; 0
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	02 2e       	mov	r0, r18
 174:	02 c0       	rjmp	.+4      	; 0x17a <DIO_voidSetPinDirection+0xfe>
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	0a 94       	dec	r0
 17c:	e2 f7       	brpl	.-8      	; 0x176 <DIO_voidSetPinDirection+0xfa>
 17e:	84 2b       	or	r24, r20
 180:	8c 93       	st	X, r24
 182:	77 c0       	rjmp	.+238    	; 0x272 <DIO_voidSetPinDirection+0x1f6>
			}
		else if(copy_u8PinDirection == DIO_PIN_INPUT)
 184:	8b 81       	ldd	r24, Y+3	; 0x03
 186:	88 23       	and	r24, r24
 188:	09 f0       	breq	.+2      	; 0x18c <DIO_voidSetPinDirection+0x110>
 18a:	73 c0       	rjmp	.+230    	; 0x272 <DIO_voidSetPinDirection+0x1f6>
			switch(copy_u8PortId)
 18c:	89 81       	ldd	r24, Y+1	; 0x01
 18e:	28 2f       	mov	r18, r24
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	3d 83       	std	Y+5, r19	; 0x05
 194:	2c 83       	std	Y+4, r18	; 0x04
 196:	8c 81       	ldd	r24, Y+4	; 0x04
 198:	9d 81       	ldd	r25, Y+5	; 0x05
 19a:	81 30       	cpi	r24, 0x01	; 1
 19c:	91 05       	cpc	r25, r1
 19e:	59 f1       	breq	.+86     	; 0x1f6 <DIO_voidSetPinDirection+0x17a>
 1a0:	2c 81       	ldd	r18, Y+4	; 0x04
 1a2:	3d 81       	ldd	r19, Y+5	; 0x05
 1a4:	22 30       	cpi	r18, 0x02	; 2
 1a6:	31 05       	cpc	r19, r1
 1a8:	2c f4       	brge	.+10     	; 0x1b4 <DIO_voidSetPinDirection+0x138>
 1aa:	8c 81       	ldd	r24, Y+4	; 0x04
 1ac:	9d 81       	ldd	r25, Y+5	; 0x05
 1ae:	00 97       	sbiw	r24, 0x00	; 0
 1b0:	69 f0       	breq	.+26     	; 0x1cc <DIO_voidSetPinDirection+0x150>
 1b2:	5f c0       	rjmp	.+190    	; 0x272 <DIO_voidSetPinDirection+0x1f6>
 1b4:	2c 81       	ldd	r18, Y+4	; 0x04
 1b6:	3d 81       	ldd	r19, Y+5	; 0x05
 1b8:	22 30       	cpi	r18, 0x02	; 2
 1ba:	31 05       	cpc	r19, r1
 1bc:	89 f1       	breq	.+98     	; 0x220 <DIO_voidSetPinDirection+0x1a4>
 1be:	8c 81       	ldd	r24, Y+4	; 0x04
 1c0:	9d 81       	ldd	r25, Y+5	; 0x05
 1c2:	83 30       	cpi	r24, 0x03	; 3
 1c4:	91 05       	cpc	r25, r1
 1c6:	09 f4       	brne	.+2      	; 0x1ca <DIO_voidSetPinDirection+0x14e>
 1c8:	40 c0       	rjmp	.+128    	; 0x24a <DIO_voidSetPinDirection+0x1ce>
 1ca:	53 c0       	rjmp	.+166    	; 0x272 <DIO_voidSetPinDirection+0x1f6>
			{
			case DIO_PORTA:CLR_BIT(DDRA,copy_u8PinId);break;
 1cc:	aa e3       	ldi	r26, 0x3A	; 58
 1ce:	b0 e0       	ldi	r27, 0x00	; 0
 1d0:	ea e3       	ldi	r30, 0x3A	; 58
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	48 2f       	mov	r20, r24
 1d8:	8a 81       	ldd	r24, Y+2	; 0x02
 1da:	28 2f       	mov	r18, r24
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	02 2e       	mov	r0, r18
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <DIO_voidSetPinDirection+0x16e>
 1e6:	88 0f       	add	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	0a 94       	dec	r0
 1ec:	e2 f7       	brpl	.-8      	; 0x1e6 <DIO_voidSetPinDirection+0x16a>
 1ee:	80 95       	com	r24
 1f0:	84 23       	and	r24, r20
 1f2:	8c 93       	st	X, r24
 1f4:	3e c0       	rjmp	.+124    	; 0x272 <DIO_voidSetPinDirection+0x1f6>
			case DIO_PORTB:CLR_BIT(DDRB,copy_u8PinId);break;
 1f6:	a7 e3       	ldi	r26, 0x37	; 55
 1f8:	b0 e0       	ldi	r27, 0x00	; 0
 1fa:	e7 e3       	ldi	r30, 0x37	; 55
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	48 2f       	mov	r20, r24
 202:	8a 81       	ldd	r24, Y+2	; 0x02
 204:	28 2f       	mov	r18, r24
 206:	30 e0       	ldi	r19, 0x00	; 0
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	02 2e       	mov	r0, r18
 20e:	02 c0       	rjmp	.+4      	; 0x214 <DIO_voidSetPinDirection+0x198>
 210:	88 0f       	add	r24, r24
 212:	99 1f       	adc	r25, r25
 214:	0a 94       	dec	r0
 216:	e2 f7       	brpl	.-8      	; 0x210 <DIO_voidSetPinDirection+0x194>
 218:	80 95       	com	r24
 21a:	84 23       	and	r24, r20
 21c:	8c 93       	st	X, r24
 21e:	29 c0       	rjmp	.+82     	; 0x272 <DIO_voidSetPinDirection+0x1f6>
			case DIO_PORTC:CLR_BIT(DDRC,copy_u8PinId);break;
 220:	a4 e3       	ldi	r26, 0x34	; 52
 222:	b0 e0       	ldi	r27, 0x00	; 0
 224:	e4 e3       	ldi	r30, 0x34	; 52
 226:	f0 e0       	ldi	r31, 0x00	; 0
 228:	80 81       	ld	r24, Z
 22a:	48 2f       	mov	r20, r24
 22c:	8a 81       	ldd	r24, Y+2	; 0x02
 22e:	28 2f       	mov	r18, r24
 230:	30 e0       	ldi	r19, 0x00	; 0
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	02 2e       	mov	r0, r18
 238:	02 c0       	rjmp	.+4      	; 0x23e <DIO_voidSetPinDirection+0x1c2>
 23a:	88 0f       	add	r24, r24
 23c:	99 1f       	adc	r25, r25
 23e:	0a 94       	dec	r0
 240:	e2 f7       	brpl	.-8      	; 0x23a <DIO_voidSetPinDirection+0x1be>
 242:	80 95       	com	r24
 244:	84 23       	and	r24, r20
 246:	8c 93       	st	X, r24
 248:	14 c0       	rjmp	.+40     	; 0x272 <DIO_voidSetPinDirection+0x1f6>
			case DIO_PORTD:CLR_BIT(DDRD,copy_u8PinId);break;
 24a:	a1 e3       	ldi	r26, 0x31	; 49
 24c:	b0 e0       	ldi	r27, 0x00	; 0
 24e:	e1 e3       	ldi	r30, 0x31	; 49
 250:	f0 e0       	ldi	r31, 0x00	; 0
 252:	80 81       	ld	r24, Z
 254:	48 2f       	mov	r20, r24
 256:	8a 81       	ldd	r24, Y+2	; 0x02
 258:	28 2f       	mov	r18, r24
 25a:	30 e0       	ldi	r19, 0x00	; 0
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	02 2e       	mov	r0, r18
 262:	02 c0       	rjmp	.+4      	; 0x268 <DIO_voidSetPinDirection+0x1ec>
 264:	88 0f       	add	r24, r24
 266:	99 1f       	adc	r25, r25
 268:	0a 94       	dec	r0
 26a:	e2 f7       	brpl	.-8      	; 0x264 <DIO_voidSetPinDirection+0x1e8>
 26c:	80 95       	com	r24
 26e:	84 23       	and	r24, r20
 270:	8c 93       	st	X, r24
			}
	}

}
 272:	27 96       	adiw	r28, 0x07	; 7
 274:	0f b6       	in	r0, 0x3f	; 63
 276:	f8 94       	cli
 278:	de bf       	out	0x3e, r29	; 62
 27a:	0f be       	out	0x3f, r0	; 63
 27c:	cd bf       	out	0x3d, r28	; 61
 27e:	cf 91       	pop	r28
 280:	df 91       	pop	r29
 282:	08 95       	ret

00000284 <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(u8 copy_u8PortId, u8 copy_u8PinId, u8 copy_u8PinValue)
{
 284:	df 93       	push	r29
 286:	cf 93       	push	r28
 288:	cd b7       	in	r28, 0x3d	; 61
 28a:	de b7       	in	r29, 0x3e	; 62
 28c:	27 97       	sbiw	r28, 0x07	; 7
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	f8 94       	cli
 292:	de bf       	out	0x3e, r29	; 62
 294:	0f be       	out	0x3f, r0	; 63
 296:	cd bf       	out	0x3d, r28	; 61
 298:	89 83       	std	Y+1, r24	; 0x01
 29a:	6a 83       	std	Y+2, r22	; 0x02
 29c:	4b 83       	std	Y+3, r20	; 0x03
	if(copy_u8PinId<=7)
 29e:	8a 81       	ldd	r24, Y+2	; 0x02
 2a0:	88 30       	cpi	r24, 0x08	; 8
 2a2:	08 f0       	brcs	.+2      	; 0x2a6 <DIO_voidSetPinValue+0x22>
 2a4:	ee c0       	rjmp	.+476    	; 0x482 <DIO_voidSetPinValue+0x1fe>
	{
		if(copy_u8PinValue == DIO_PIN_HIGH)
 2a6:	8b 81       	ldd	r24, Y+3	; 0x03
 2a8:	81 30       	cpi	r24, 0x01	; 1
 2aa:	09 f0       	breq	.+2      	; 0x2ae <DIO_voidSetPinValue+0x2a>
 2ac:	6f c0       	rjmp	.+222    	; 0x38c <DIO_voidSetPinValue+0x108>
		{
			switch(copy_u8PortId)
 2ae:	89 81       	ldd	r24, Y+1	; 0x01
 2b0:	28 2f       	mov	r18, r24
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	3f 83       	std	Y+7, r19	; 0x07
 2b6:	2e 83       	std	Y+6, r18	; 0x06
 2b8:	8e 81       	ldd	r24, Y+6	; 0x06
 2ba:	9f 81       	ldd	r25, Y+7	; 0x07
 2bc:	81 30       	cpi	r24, 0x01	; 1
 2be:	91 05       	cpc	r25, r1
 2c0:	49 f1       	breq	.+82     	; 0x314 <DIO_voidSetPinValue+0x90>
 2c2:	2e 81       	ldd	r18, Y+6	; 0x06
 2c4:	3f 81       	ldd	r19, Y+7	; 0x07
 2c6:	22 30       	cpi	r18, 0x02	; 2
 2c8:	31 05       	cpc	r19, r1
 2ca:	2c f4       	brge	.+10     	; 0x2d6 <DIO_voidSetPinValue+0x52>
 2cc:	8e 81       	ldd	r24, Y+6	; 0x06
 2ce:	9f 81       	ldd	r25, Y+7	; 0x07
 2d0:	00 97       	sbiw	r24, 0x00	; 0
 2d2:	61 f0       	breq	.+24     	; 0x2ec <DIO_voidSetPinValue+0x68>
 2d4:	d6 c0       	rjmp	.+428    	; 0x482 <DIO_voidSetPinValue+0x1fe>
 2d6:	2e 81       	ldd	r18, Y+6	; 0x06
 2d8:	3f 81       	ldd	r19, Y+7	; 0x07
 2da:	22 30       	cpi	r18, 0x02	; 2
 2dc:	31 05       	cpc	r19, r1
 2de:	71 f1       	breq	.+92     	; 0x33c <DIO_voidSetPinValue+0xb8>
 2e0:	8e 81       	ldd	r24, Y+6	; 0x06
 2e2:	9f 81       	ldd	r25, Y+7	; 0x07
 2e4:	83 30       	cpi	r24, 0x03	; 3
 2e6:	91 05       	cpc	r25, r1
 2e8:	e9 f1       	breq	.+122    	; 0x364 <DIO_voidSetPinValue+0xe0>
 2ea:	cb c0       	rjmp	.+406    	; 0x482 <DIO_voidSetPinValue+0x1fe>
			{
			case DIO_PORTA:SET_BIT(PORTA,copy_u8PinId);break;
 2ec:	ab e3       	ldi	r26, 0x3B	; 59
 2ee:	b0 e0       	ldi	r27, 0x00	; 0
 2f0:	eb e3       	ldi	r30, 0x3B	; 59
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	48 2f       	mov	r20, r24
 2f8:	8a 81       	ldd	r24, Y+2	; 0x02
 2fa:	28 2f       	mov	r18, r24
 2fc:	30 e0       	ldi	r19, 0x00	; 0
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	02 2e       	mov	r0, r18
 304:	02 c0       	rjmp	.+4      	; 0x30a <DIO_voidSetPinValue+0x86>
 306:	88 0f       	add	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	0a 94       	dec	r0
 30c:	e2 f7       	brpl	.-8      	; 0x306 <DIO_voidSetPinValue+0x82>
 30e:	84 2b       	or	r24, r20
 310:	8c 93       	st	X, r24
 312:	b7 c0       	rjmp	.+366    	; 0x482 <DIO_voidSetPinValue+0x1fe>
			case DIO_PORTB:SET_BIT(PORTB,copy_u8PinId);break;
 314:	a8 e3       	ldi	r26, 0x38	; 56
 316:	b0 e0       	ldi	r27, 0x00	; 0
 318:	e8 e3       	ldi	r30, 0x38	; 56
 31a:	f0 e0       	ldi	r31, 0x00	; 0
 31c:	80 81       	ld	r24, Z
 31e:	48 2f       	mov	r20, r24
 320:	8a 81       	ldd	r24, Y+2	; 0x02
 322:	28 2f       	mov	r18, r24
 324:	30 e0       	ldi	r19, 0x00	; 0
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	02 2e       	mov	r0, r18
 32c:	02 c0       	rjmp	.+4      	; 0x332 <DIO_voidSetPinValue+0xae>
 32e:	88 0f       	add	r24, r24
 330:	99 1f       	adc	r25, r25
 332:	0a 94       	dec	r0
 334:	e2 f7       	brpl	.-8      	; 0x32e <DIO_voidSetPinValue+0xaa>
 336:	84 2b       	or	r24, r20
 338:	8c 93       	st	X, r24
 33a:	a3 c0       	rjmp	.+326    	; 0x482 <DIO_voidSetPinValue+0x1fe>
			case DIO_PORTC:SET_BIT(PORTC,copy_u8PinId);break;
 33c:	a5 e3       	ldi	r26, 0x35	; 53
 33e:	b0 e0       	ldi	r27, 0x00	; 0
 340:	e5 e3       	ldi	r30, 0x35	; 53
 342:	f0 e0       	ldi	r31, 0x00	; 0
 344:	80 81       	ld	r24, Z
 346:	48 2f       	mov	r20, r24
 348:	8a 81       	ldd	r24, Y+2	; 0x02
 34a:	28 2f       	mov	r18, r24
 34c:	30 e0       	ldi	r19, 0x00	; 0
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	02 2e       	mov	r0, r18
 354:	02 c0       	rjmp	.+4      	; 0x35a <DIO_voidSetPinValue+0xd6>
 356:	88 0f       	add	r24, r24
 358:	99 1f       	adc	r25, r25
 35a:	0a 94       	dec	r0
 35c:	e2 f7       	brpl	.-8      	; 0x356 <DIO_voidSetPinValue+0xd2>
 35e:	84 2b       	or	r24, r20
 360:	8c 93       	st	X, r24
 362:	8f c0       	rjmp	.+286    	; 0x482 <DIO_voidSetPinValue+0x1fe>
			case DIO_PORTD:SET_BIT(PORTD,copy_u8PinId);break;
 364:	a2 e3       	ldi	r26, 0x32	; 50
 366:	b0 e0       	ldi	r27, 0x00	; 0
 368:	e2 e3       	ldi	r30, 0x32	; 50
 36a:	f0 e0       	ldi	r31, 0x00	; 0
 36c:	80 81       	ld	r24, Z
 36e:	48 2f       	mov	r20, r24
 370:	8a 81       	ldd	r24, Y+2	; 0x02
 372:	28 2f       	mov	r18, r24
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	02 2e       	mov	r0, r18
 37c:	02 c0       	rjmp	.+4      	; 0x382 <DIO_voidSetPinValue+0xfe>
 37e:	88 0f       	add	r24, r24
 380:	99 1f       	adc	r25, r25
 382:	0a 94       	dec	r0
 384:	e2 f7       	brpl	.-8      	; 0x37e <DIO_voidSetPinValue+0xfa>
 386:	84 2b       	or	r24, r20
 388:	8c 93       	st	X, r24
 38a:	7b c0       	rjmp	.+246    	; 0x482 <DIO_voidSetPinValue+0x1fe>
			}
		}

		else if(copy_u8PinId<=7)
 38c:	8a 81       	ldd	r24, Y+2	; 0x02
 38e:	88 30       	cpi	r24, 0x08	; 8
 390:	08 f0       	brcs	.+2      	; 0x394 <DIO_voidSetPinValue+0x110>
 392:	77 c0       	rjmp	.+238    	; 0x482 <DIO_voidSetPinValue+0x1fe>
		{
			if(copy_u8PinValue == DIO_PIN_LOW)
 394:	8b 81       	ldd	r24, Y+3	; 0x03
 396:	88 23       	and	r24, r24
 398:	09 f0       	breq	.+2      	; 0x39c <DIO_voidSetPinValue+0x118>
 39a:	73 c0       	rjmp	.+230    	; 0x482 <DIO_voidSetPinValue+0x1fe>
			{
				switch(copy_u8PortId)
 39c:	89 81       	ldd	r24, Y+1	; 0x01
 39e:	28 2f       	mov	r18, r24
 3a0:	30 e0       	ldi	r19, 0x00	; 0
 3a2:	3d 83       	std	Y+5, r19	; 0x05
 3a4:	2c 83       	std	Y+4, r18	; 0x04
 3a6:	8c 81       	ldd	r24, Y+4	; 0x04
 3a8:	9d 81       	ldd	r25, Y+5	; 0x05
 3aa:	81 30       	cpi	r24, 0x01	; 1
 3ac:	91 05       	cpc	r25, r1
 3ae:	59 f1       	breq	.+86     	; 0x406 <DIO_voidSetPinValue+0x182>
 3b0:	2c 81       	ldd	r18, Y+4	; 0x04
 3b2:	3d 81       	ldd	r19, Y+5	; 0x05
 3b4:	22 30       	cpi	r18, 0x02	; 2
 3b6:	31 05       	cpc	r19, r1
 3b8:	2c f4       	brge	.+10     	; 0x3c4 <DIO_voidSetPinValue+0x140>
 3ba:	8c 81       	ldd	r24, Y+4	; 0x04
 3bc:	9d 81       	ldd	r25, Y+5	; 0x05
 3be:	00 97       	sbiw	r24, 0x00	; 0
 3c0:	69 f0       	breq	.+26     	; 0x3dc <DIO_voidSetPinValue+0x158>
 3c2:	5f c0       	rjmp	.+190    	; 0x482 <DIO_voidSetPinValue+0x1fe>
 3c4:	2c 81       	ldd	r18, Y+4	; 0x04
 3c6:	3d 81       	ldd	r19, Y+5	; 0x05
 3c8:	22 30       	cpi	r18, 0x02	; 2
 3ca:	31 05       	cpc	r19, r1
 3cc:	89 f1       	breq	.+98     	; 0x430 <DIO_voidSetPinValue+0x1ac>
 3ce:	8c 81       	ldd	r24, Y+4	; 0x04
 3d0:	9d 81       	ldd	r25, Y+5	; 0x05
 3d2:	83 30       	cpi	r24, 0x03	; 3
 3d4:	91 05       	cpc	r25, r1
 3d6:	09 f4       	brne	.+2      	; 0x3da <DIO_voidSetPinValue+0x156>
 3d8:	40 c0       	rjmp	.+128    	; 0x45a <DIO_voidSetPinValue+0x1d6>
 3da:	53 c0       	rjmp	.+166    	; 0x482 <DIO_voidSetPinValue+0x1fe>
				{
				case DIO_PORTA:CLR_BIT(PORTA,copy_u8PinId);break;
 3dc:	ab e3       	ldi	r26, 0x3B	; 59
 3de:	b0 e0       	ldi	r27, 0x00	; 0
 3e0:	eb e3       	ldi	r30, 0x3B	; 59
 3e2:	f0 e0       	ldi	r31, 0x00	; 0
 3e4:	80 81       	ld	r24, Z
 3e6:	48 2f       	mov	r20, r24
 3e8:	8a 81       	ldd	r24, Y+2	; 0x02
 3ea:	28 2f       	mov	r18, r24
 3ec:	30 e0       	ldi	r19, 0x00	; 0
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	02 2e       	mov	r0, r18
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <DIO_voidSetPinValue+0x176>
 3f6:	88 0f       	add	r24, r24
 3f8:	99 1f       	adc	r25, r25
 3fa:	0a 94       	dec	r0
 3fc:	e2 f7       	brpl	.-8      	; 0x3f6 <DIO_voidSetPinValue+0x172>
 3fe:	80 95       	com	r24
 400:	84 23       	and	r24, r20
 402:	8c 93       	st	X, r24
 404:	3e c0       	rjmp	.+124    	; 0x482 <DIO_voidSetPinValue+0x1fe>
				case DIO_PORTB:CLR_BIT(PORTB,copy_u8PinId);break;
 406:	a8 e3       	ldi	r26, 0x38	; 56
 408:	b0 e0       	ldi	r27, 0x00	; 0
 40a:	e8 e3       	ldi	r30, 0x38	; 56
 40c:	f0 e0       	ldi	r31, 0x00	; 0
 40e:	80 81       	ld	r24, Z
 410:	48 2f       	mov	r20, r24
 412:	8a 81       	ldd	r24, Y+2	; 0x02
 414:	28 2f       	mov	r18, r24
 416:	30 e0       	ldi	r19, 0x00	; 0
 418:	81 e0       	ldi	r24, 0x01	; 1
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	02 2e       	mov	r0, r18
 41e:	02 c0       	rjmp	.+4      	; 0x424 <DIO_voidSetPinValue+0x1a0>
 420:	88 0f       	add	r24, r24
 422:	99 1f       	adc	r25, r25
 424:	0a 94       	dec	r0
 426:	e2 f7       	brpl	.-8      	; 0x420 <DIO_voidSetPinValue+0x19c>
 428:	80 95       	com	r24
 42a:	84 23       	and	r24, r20
 42c:	8c 93       	st	X, r24
 42e:	29 c0       	rjmp	.+82     	; 0x482 <DIO_voidSetPinValue+0x1fe>
				case DIO_PORTC:CLR_BIT(PORTC,copy_u8PinId);break;
 430:	a5 e3       	ldi	r26, 0x35	; 53
 432:	b0 e0       	ldi	r27, 0x00	; 0
 434:	e5 e3       	ldi	r30, 0x35	; 53
 436:	f0 e0       	ldi	r31, 0x00	; 0
 438:	80 81       	ld	r24, Z
 43a:	48 2f       	mov	r20, r24
 43c:	8a 81       	ldd	r24, Y+2	; 0x02
 43e:	28 2f       	mov	r18, r24
 440:	30 e0       	ldi	r19, 0x00	; 0
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	02 2e       	mov	r0, r18
 448:	02 c0       	rjmp	.+4      	; 0x44e <DIO_voidSetPinValue+0x1ca>
 44a:	88 0f       	add	r24, r24
 44c:	99 1f       	adc	r25, r25
 44e:	0a 94       	dec	r0
 450:	e2 f7       	brpl	.-8      	; 0x44a <DIO_voidSetPinValue+0x1c6>
 452:	80 95       	com	r24
 454:	84 23       	and	r24, r20
 456:	8c 93       	st	X, r24
 458:	14 c0       	rjmp	.+40     	; 0x482 <DIO_voidSetPinValue+0x1fe>
				case DIO_PORTD:CLR_BIT(PORTD,copy_u8PinId);break;
 45a:	a2 e3       	ldi	r26, 0x32	; 50
 45c:	b0 e0       	ldi	r27, 0x00	; 0
 45e:	e2 e3       	ldi	r30, 0x32	; 50
 460:	f0 e0       	ldi	r31, 0x00	; 0
 462:	80 81       	ld	r24, Z
 464:	48 2f       	mov	r20, r24
 466:	8a 81       	ldd	r24, Y+2	; 0x02
 468:	28 2f       	mov	r18, r24
 46a:	30 e0       	ldi	r19, 0x00	; 0
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	02 2e       	mov	r0, r18
 472:	02 c0       	rjmp	.+4      	; 0x478 <DIO_voidSetPinValue+0x1f4>
 474:	88 0f       	add	r24, r24
 476:	99 1f       	adc	r25, r25
 478:	0a 94       	dec	r0
 47a:	e2 f7       	brpl	.-8      	; 0x474 <DIO_voidSetPinValue+0x1f0>
 47c:	80 95       	com	r24
 47e:	84 23       	and	r24, r20
 480:	8c 93       	st	X, r24
				}
			}
		}
	}
}
 482:	27 96       	adiw	r28, 0x07	; 7
 484:	0f b6       	in	r0, 0x3f	; 63
 486:	f8 94       	cli
 488:	de bf       	out	0x3e, r29	; 62
 48a:	0f be       	out	0x3f, r0	; 63
 48c:	cd bf       	out	0x3d, r28	; 61
 48e:	cf 91       	pop	r28
 490:	df 91       	pop	r29
 492:	08 95       	ret

00000494 <DIO_voidGetPinValue>:

void DIO_voidGetPinValue(u8 copy_u8PortId, u8 copy_u8PinId, u8 *copy_pu8_PinValue)
{
 494:	df 93       	push	r29
 496:	cf 93       	push	r28
 498:	00 d0       	rcall	.+0      	; 0x49a <DIO_voidGetPinValue+0x6>
 49a:	00 d0       	rcall	.+0      	; 0x49c <DIO_voidGetPinValue+0x8>
 49c:	00 d0       	rcall	.+0      	; 0x49e <DIO_voidGetPinValue+0xa>
 49e:	cd b7       	in	r28, 0x3d	; 61
 4a0:	de b7       	in	r29, 0x3e	; 62
 4a2:	89 83       	std	Y+1, r24	; 0x01
 4a4:	6a 83       	std	Y+2, r22	; 0x02
 4a6:	5c 83       	std	Y+4, r21	; 0x04
 4a8:	4b 83       	std	Y+3, r20	; 0x03
	if(copy_u8PinId<=7)
 4aa:	8a 81       	ldd	r24, Y+2	; 0x02
 4ac:	88 30       	cpi	r24, 0x08	; 8
 4ae:	08 f0       	brcs	.+2      	; 0x4b2 <DIO_voidGetPinValue+0x1e>
 4b0:	70 c0       	rjmp	.+224    	; 0x592 <DIO_voidGetPinValue+0xfe>
	{
		switch(copy_u8PortId)
 4b2:	89 81       	ldd	r24, Y+1	; 0x01
 4b4:	28 2f       	mov	r18, r24
 4b6:	30 e0       	ldi	r19, 0x00	; 0
 4b8:	3e 83       	std	Y+6, r19	; 0x06
 4ba:	2d 83       	std	Y+5, r18	; 0x05
 4bc:	4d 81       	ldd	r20, Y+5	; 0x05
 4be:	5e 81       	ldd	r21, Y+6	; 0x06
 4c0:	41 30       	cpi	r20, 0x01	; 1
 4c2:	51 05       	cpc	r21, r1
 4c4:	59 f1       	breq	.+86     	; 0x51c <DIO_voidGetPinValue+0x88>
 4c6:	8d 81       	ldd	r24, Y+5	; 0x05
 4c8:	9e 81       	ldd	r25, Y+6	; 0x06
 4ca:	82 30       	cpi	r24, 0x02	; 2
 4cc:	91 05       	cpc	r25, r1
 4ce:	34 f4       	brge	.+12     	; 0x4dc <DIO_voidGetPinValue+0x48>
 4d0:	2d 81       	ldd	r18, Y+5	; 0x05
 4d2:	3e 81       	ldd	r19, Y+6	; 0x06
 4d4:	21 15       	cp	r18, r1
 4d6:	31 05       	cpc	r19, r1
 4d8:	69 f0       	breq	.+26     	; 0x4f4 <DIO_voidGetPinValue+0x60>
 4da:	5b c0       	rjmp	.+182    	; 0x592 <DIO_voidGetPinValue+0xfe>
 4dc:	4d 81       	ldd	r20, Y+5	; 0x05
 4de:	5e 81       	ldd	r21, Y+6	; 0x06
 4e0:	42 30       	cpi	r20, 0x02	; 2
 4e2:	51 05       	cpc	r21, r1
 4e4:	79 f1       	breq	.+94     	; 0x544 <DIO_voidGetPinValue+0xb0>
 4e6:	8d 81       	ldd	r24, Y+5	; 0x05
 4e8:	9e 81       	ldd	r25, Y+6	; 0x06
 4ea:	83 30       	cpi	r24, 0x03	; 3
 4ec:	91 05       	cpc	r25, r1
 4ee:	09 f4       	brne	.+2      	; 0x4f2 <DIO_voidGetPinValue+0x5e>
 4f0:	3d c0       	rjmp	.+122    	; 0x56c <DIO_voidGetPinValue+0xd8>
 4f2:	4f c0       	rjmp	.+158    	; 0x592 <DIO_voidGetPinValue+0xfe>
		{
		case DIO_PORTA:*copy_pu8_PinValue = GET_BIT(PINA,copy_u8PinId);break;
 4f4:	e9 e3       	ldi	r30, 0x39	; 57
 4f6:	f0 e0       	ldi	r31, 0x00	; 0
 4f8:	80 81       	ld	r24, Z
 4fa:	28 2f       	mov	r18, r24
 4fc:	30 e0       	ldi	r19, 0x00	; 0
 4fe:	8a 81       	ldd	r24, Y+2	; 0x02
 500:	88 2f       	mov	r24, r24
 502:	90 e0       	ldi	r25, 0x00	; 0
 504:	a9 01       	movw	r20, r18
 506:	02 c0       	rjmp	.+4      	; 0x50c <DIO_voidGetPinValue+0x78>
 508:	55 95       	asr	r21
 50a:	47 95       	ror	r20
 50c:	8a 95       	dec	r24
 50e:	e2 f7       	brpl	.-8      	; 0x508 <DIO_voidGetPinValue+0x74>
 510:	ca 01       	movw	r24, r20
 512:	81 70       	andi	r24, 0x01	; 1
 514:	eb 81       	ldd	r30, Y+3	; 0x03
 516:	fc 81       	ldd	r31, Y+4	; 0x04
 518:	80 83       	st	Z, r24
 51a:	3b c0       	rjmp	.+118    	; 0x592 <DIO_voidGetPinValue+0xfe>
		case DIO_PORTB:*copy_pu8_PinValue = GET_BIT(PINB,copy_u8PinId);break;
 51c:	e6 e3       	ldi	r30, 0x36	; 54
 51e:	f0 e0       	ldi	r31, 0x00	; 0
 520:	80 81       	ld	r24, Z
 522:	28 2f       	mov	r18, r24
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	8a 81       	ldd	r24, Y+2	; 0x02
 528:	88 2f       	mov	r24, r24
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	a9 01       	movw	r20, r18
 52e:	02 c0       	rjmp	.+4      	; 0x534 <DIO_voidGetPinValue+0xa0>
 530:	55 95       	asr	r21
 532:	47 95       	ror	r20
 534:	8a 95       	dec	r24
 536:	e2 f7       	brpl	.-8      	; 0x530 <DIO_voidGetPinValue+0x9c>
 538:	ca 01       	movw	r24, r20
 53a:	81 70       	andi	r24, 0x01	; 1
 53c:	eb 81       	ldd	r30, Y+3	; 0x03
 53e:	fc 81       	ldd	r31, Y+4	; 0x04
 540:	80 83       	st	Z, r24
 542:	27 c0       	rjmp	.+78     	; 0x592 <DIO_voidGetPinValue+0xfe>
		case DIO_PORTC:*copy_pu8_PinValue = GET_BIT(PINC,copy_u8PinId);break;
 544:	e3 e3       	ldi	r30, 0x33	; 51
 546:	f0 e0       	ldi	r31, 0x00	; 0
 548:	80 81       	ld	r24, Z
 54a:	28 2f       	mov	r18, r24
 54c:	30 e0       	ldi	r19, 0x00	; 0
 54e:	8a 81       	ldd	r24, Y+2	; 0x02
 550:	88 2f       	mov	r24, r24
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	a9 01       	movw	r20, r18
 556:	02 c0       	rjmp	.+4      	; 0x55c <DIO_voidGetPinValue+0xc8>
 558:	55 95       	asr	r21
 55a:	47 95       	ror	r20
 55c:	8a 95       	dec	r24
 55e:	e2 f7       	brpl	.-8      	; 0x558 <DIO_voidGetPinValue+0xc4>
 560:	ca 01       	movw	r24, r20
 562:	81 70       	andi	r24, 0x01	; 1
 564:	eb 81       	ldd	r30, Y+3	; 0x03
 566:	fc 81       	ldd	r31, Y+4	; 0x04
 568:	80 83       	st	Z, r24
 56a:	13 c0       	rjmp	.+38     	; 0x592 <DIO_voidGetPinValue+0xfe>
		case DIO_PORTD:*copy_pu8_PinValue = GET_BIT(PIND,copy_u8PinId);break;
 56c:	e0 e3       	ldi	r30, 0x30	; 48
 56e:	f0 e0       	ldi	r31, 0x00	; 0
 570:	80 81       	ld	r24, Z
 572:	28 2f       	mov	r18, r24
 574:	30 e0       	ldi	r19, 0x00	; 0
 576:	8a 81       	ldd	r24, Y+2	; 0x02
 578:	88 2f       	mov	r24, r24
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	a9 01       	movw	r20, r18
 57e:	02 c0       	rjmp	.+4      	; 0x584 <DIO_voidGetPinValue+0xf0>
 580:	55 95       	asr	r21
 582:	47 95       	ror	r20
 584:	8a 95       	dec	r24
 586:	e2 f7       	brpl	.-8      	; 0x580 <DIO_voidGetPinValue+0xec>
 588:	ca 01       	movw	r24, r20
 58a:	81 70       	andi	r24, 0x01	; 1
 58c:	eb 81       	ldd	r30, Y+3	; 0x03
 58e:	fc 81       	ldd	r31, Y+4	; 0x04
 590:	80 83       	st	Z, r24
		}
	}
}
 592:	26 96       	adiw	r28, 0x06	; 6
 594:	0f b6       	in	r0, 0x3f	; 63
 596:	f8 94       	cli
 598:	de bf       	out	0x3e, r29	; 62
 59a:	0f be       	out	0x3f, r0	; 63
 59c:	cd bf       	out	0x3d, r28	; 61
 59e:	cf 91       	pop	r28
 5a0:	df 91       	pop	r29
 5a2:	08 95       	ret

000005a4 <DIO_voidTogglePinValue>:
	}
	return Local_u8Reading;
}*/

void DIO_voidTogglePinValue(u8 copy_u8PortId, u8 copy_u8PinId)
{
 5a4:	df 93       	push	r29
 5a6:	cf 93       	push	r28
 5a8:	00 d0       	rcall	.+0      	; 0x5aa <DIO_voidTogglePinValue+0x6>
 5aa:	00 d0       	rcall	.+0      	; 0x5ac <DIO_voidTogglePinValue+0x8>
 5ac:	cd b7       	in	r28, 0x3d	; 61
 5ae:	de b7       	in	r29, 0x3e	; 62
 5b0:	89 83       	std	Y+1, r24	; 0x01
 5b2:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8PortId)
 5b4:	89 81       	ldd	r24, Y+1	; 0x01
 5b6:	28 2f       	mov	r18, r24
 5b8:	30 e0       	ldi	r19, 0x00	; 0
 5ba:	3c 83       	std	Y+4, r19	; 0x04
 5bc:	2b 83       	std	Y+3, r18	; 0x03
 5be:	8b 81       	ldd	r24, Y+3	; 0x03
 5c0:	9c 81       	ldd	r25, Y+4	; 0x04
 5c2:	81 30       	cpi	r24, 0x01	; 1
 5c4:	91 05       	cpc	r25, r1
 5c6:	49 f1       	breq	.+82     	; 0x61a <DIO_voidTogglePinValue+0x76>
 5c8:	2b 81       	ldd	r18, Y+3	; 0x03
 5ca:	3c 81       	ldd	r19, Y+4	; 0x04
 5cc:	22 30       	cpi	r18, 0x02	; 2
 5ce:	31 05       	cpc	r19, r1
 5d0:	2c f4       	brge	.+10     	; 0x5dc <DIO_voidTogglePinValue+0x38>
 5d2:	8b 81       	ldd	r24, Y+3	; 0x03
 5d4:	9c 81       	ldd	r25, Y+4	; 0x04
 5d6:	00 97       	sbiw	r24, 0x00	; 0
 5d8:	61 f0       	breq	.+24     	; 0x5f2 <DIO_voidTogglePinValue+0x4e>
 5da:	5a c0       	rjmp	.+180    	; 0x690 <DIO_voidTogglePinValue+0xec>
 5dc:	2b 81       	ldd	r18, Y+3	; 0x03
 5de:	3c 81       	ldd	r19, Y+4	; 0x04
 5e0:	22 30       	cpi	r18, 0x02	; 2
 5e2:	31 05       	cpc	r19, r1
 5e4:	71 f1       	breq	.+92     	; 0x642 <DIO_voidTogglePinValue+0x9e>
 5e6:	8b 81       	ldd	r24, Y+3	; 0x03
 5e8:	9c 81       	ldd	r25, Y+4	; 0x04
 5ea:	83 30       	cpi	r24, 0x03	; 3
 5ec:	91 05       	cpc	r25, r1
 5ee:	e9 f1       	breq	.+122    	; 0x66a <DIO_voidTogglePinValue+0xc6>
 5f0:	4f c0       	rjmp	.+158    	; 0x690 <DIO_voidTogglePinValue+0xec>
	{
	case DIO_PORTA: TOG_BIT(PORTA, copy_u8PinId); break;
 5f2:	ab e3       	ldi	r26, 0x3B	; 59
 5f4:	b0 e0       	ldi	r27, 0x00	; 0
 5f6:	eb e3       	ldi	r30, 0x3B	; 59
 5f8:	f0 e0       	ldi	r31, 0x00	; 0
 5fa:	80 81       	ld	r24, Z
 5fc:	48 2f       	mov	r20, r24
 5fe:	8a 81       	ldd	r24, Y+2	; 0x02
 600:	28 2f       	mov	r18, r24
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	81 e0       	ldi	r24, 0x01	; 1
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	02 2e       	mov	r0, r18
 60a:	02 c0       	rjmp	.+4      	; 0x610 <DIO_voidTogglePinValue+0x6c>
 60c:	88 0f       	add	r24, r24
 60e:	99 1f       	adc	r25, r25
 610:	0a 94       	dec	r0
 612:	e2 f7       	brpl	.-8      	; 0x60c <DIO_voidTogglePinValue+0x68>
 614:	84 27       	eor	r24, r20
 616:	8c 93       	st	X, r24
 618:	3b c0       	rjmp	.+118    	; 0x690 <DIO_voidTogglePinValue+0xec>
	case DIO_PORTB: TOG_BIT(PORTB, copy_u8PinId); break;
 61a:	a8 e3       	ldi	r26, 0x38	; 56
 61c:	b0 e0       	ldi	r27, 0x00	; 0
 61e:	e8 e3       	ldi	r30, 0x38	; 56
 620:	f0 e0       	ldi	r31, 0x00	; 0
 622:	80 81       	ld	r24, Z
 624:	48 2f       	mov	r20, r24
 626:	8a 81       	ldd	r24, Y+2	; 0x02
 628:	28 2f       	mov	r18, r24
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	81 e0       	ldi	r24, 0x01	; 1
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	02 2e       	mov	r0, r18
 632:	02 c0       	rjmp	.+4      	; 0x638 <DIO_voidTogglePinValue+0x94>
 634:	88 0f       	add	r24, r24
 636:	99 1f       	adc	r25, r25
 638:	0a 94       	dec	r0
 63a:	e2 f7       	brpl	.-8      	; 0x634 <DIO_voidTogglePinValue+0x90>
 63c:	84 27       	eor	r24, r20
 63e:	8c 93       	st	X, r24
 640:	27 c0       	rjmp	.+78     	; 0x690 <DIO_voidTogglePinValue+0xec>
	case DIO_PORTC: TOG_BIT(PORTC, copy_u8PinId); break;
 642:	a5 e3       	ldi	r26, 0x35	; 53
 644:	b0 e0       	ldi	r27, 0x00	; 0
 646:	e5 e3       	ldi	r30, 0x35	; 53
 648:	f0 e0       	ldi	r31, 0x00	; 0
 64a:	80 81       	ld	r24, Z
 64c:	48 2f       	mov	r20, r24
 64e:	8a 81       	ldd	r24, Y+2	; 0x02
 650:	28 2f       	mov	r18, r24
 652:	30 e0       	ldi	r19, 0x00	; 0
 654:	81 e0       	ldi	r24, 0x01	; 1
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	02 2e       	mov	r0, r18
 65a:	02 c0       	rjmp	.+4      	; 0x660 <DIO_voidTogglePinValue+0xbc>
 65c:	88 0f       	add	r24, r24
 65e:	99 1f       	adc	r25, r25
 660:	0a 94       	dec	r0
 662:	e2 f7       	brpl	.-8      	; 0x65c <DIO_voidTogglePinValue+0xb8>
 664:	84 27       	eor	r24, r20
 666:	8c 93       	st	X, r24
 668:	13 c0       	rjmp	.+38     	; 0x690 <DIO_voidTogglePinValue+0xec>
	case DIO_PORTD: TOG_BIT(PORTD, copy_u8PinId); break;
 66a:	a2 e3       	ldi	r26, 0x32	; 50
 66c:	b0 e0       	ldi	r27, 0x00	; 0
 66e:	e2 e3       	ldi	r30, 0x32	; 50
 670:	f0 e0       	ldi	r31, 0x00	; 0
 672:	80 81       	ld	r24, Z
 674:	48 2f       	mov	r20, r24
 676:	8a 81       	ldd	r24, Y+2	; 0x02
 678:	28 2f       	mov	r18, r24
 67a:	30 e0       	ldi	r19, 0x00	; 0
 67c:	81 e0       	ldi	r24, 0x01	; 1
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	02 2e       	mov	r0, r18
 682:	02 c0       	rjmp	.+4      	; 0x688 <DIO_voidTogglePinValue+0xe4>
 684:	88 0f       	add	r24, r24
 686:	99 1f       	adc	r25, r25
 688:	0a 94       	dec	r0
 68a:	e2 f7       	brpl	.-8      	; 0x684 <DIO_voidTogglePinValue+0xe0>
 68c:	84 27       	eor	r24, r20
 68e:	8c 93       	st	X, r24
	}
}
 690:	0f 90       	pop	r0
 692:	0f 90       	pop	r0
 694:	0f 90       	pop	r0
 696:	0f 90       	pop	r0
 698:	cf 91       	pop	r28
 69a:	df 91       	pop	r29
 69c:	08 95       	ret

0000069e <DIO_voidActivePinInPullUpResistance>:

void DIO_voidActivePinInPullUpResistance(u8 copy_u8PortId, u8 copy_u8PinId)
{
 69e:	df 93       	push	r29
 6a0:	cf 93       	push	r28
 6a2:	00 d0       	rcall	.+0      	; 0x6a4 <DIO_voidActivePinInPullUpResistance+0x6>
 6a4:	00 d0       	rcall	.+0      	; 0x6a6 <DIO_voidActivePinInPullUpResistance+0x8>
 6a6:	cd b7       	in	r28, 0x3d	; 61
 6a8:	de b7       	in	r29, 0x3e	; 62
 6aa:	89 83       	std	Y+1, r24	; 0x01
 6ac:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8PortId)
 6ae:	89 81       	ldd	r24, Y+1	; 0x01
 6b0:	28 2f       	mov	r18, r24
 6b2:	30 e0       	ldi	r19, 0x00	; 0
 6b4:	3c 83       	std	Y+4, r19	; 0x04
 6b6:	2b 83       	std	Y+3, r18	; 0x03
 6b8:	8b 81       	ldd	r24, Y+3	; 0x03
 6ba:	9c 81       	ldd	r25, Y+4	; 0x04
 6bc:	81 30       	cpi	r24, 0x01	; 1
 6be:	91 05       	cpc	r25, r1
 6c0:	49 f1       	breq	.+82     	; 0x714 <DIO_voidActivePinInPullUpResistance+0x76>
 6c2:	2b 81       	ldd	r18, Y+3	; 0x03
 6c4:	3c 81       	ldd	r19, Y+4	; 0x04
 6c6:	22 30       	cpi	r18, 0x02	; 2
 6c8:	31 05       	cpc	r19, r1
 6ca:	2c f4       	brge	.+10     	; 0x6d6 <DIO_voidActivePinInPullUpResistance+0x38>
 6cc:	8b 81       	ldd	r24, Y+3	; 0x03
 6ce:	9c 81       	ldd	r25, Y+4	; 0x04
 6d0:	00 97       	sbiw	r24, 0x00	; 0
 6d2:	61 f0       	breq	.+24     	; 0x6ec <DIO_voidActivePinInPullUpResistance+0x4e>
 6d4:	5a c0       	rjmp	.+180    	; 0x78a <DIO_voidActivePinInPullUpResistance+0xec>
 6d6:	2b 81       	ldd	r18, Y+3	; 0x03
 6d8:	3c 81       	ldd	r19, Y+4	; 0x04
 6da:	22 30       	cpi	r18, 0x02	; 2
 6dc:	31 05       	cpc	r19, r1
 6de:	71 f1       	breq	.+92     	; 0x73c <DIO_voidActivePinInPullUpResistance+0x9e>
 6e0:	8b 81       	ldd	r24, Y+3	; 0x03
 6e2:	9c 81       	ldd	r25, Y+4	; 0x04
 6e4:	83 30       	cpi	r24, 0x03	; 3
 6e6:	91 05       	cpc	r25, r1
 6e8:	e9 f1       	breq	.+122    	; 0x764 <DIO_voidActivePinInPullUpResistance+0xc6>
 6ea:	4f c0       	rjmp	.+158    	; 0x78a <DIO_voidActivePinInPullUpResistance+0xec>
	{
	case DIO_PORTA: SET_BIT(PORTA, copy_u8PinId); break;
 6ec:	ab e3       	ldi	r26, 0x3B	; 59
 6ee:	b0 e0       	ldi	r27, 0x00	; 0
 6f0:	eb e3       	ldi	r30, 0x3B	; 59
 6f2:	f0 e0       	ldi	r31, 0x00	; 0
 6f4:	80 81       	ld	r24, Z
 6f6:	48 2f       	mov	r20, r24
 6f8:	8a 81       	ldd	r24, Y+2	; 0x02
 6fa:	28 2f       	mov	r18, r24
 6fc:	30 e0       	ldi	r19, 0x00	; 0
 6fe:	81 e0       	ldi	r24, 0x01	; 1
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	02 2e       	mov	r0, r18
 704:	02 c0       	rjmp	.+4      	; 0x70a <DIO_voidActivePinInPullUpResistance+0x6c>
 706:	88 0f       	add	r24, r24
 708:	99 1f       	adc	r25, r25
 70a:	0a 94       	dec	r0
 70c:	e2 f7       	brpl	.-8      	; 0x706 <DIO_voidActivePinInPullUpResistance+0x68>
 70e:	84 2b       	or	r24, r20
 710:	8c 93       	st	X, r24
 712:	3b c0       	rjmp	.+118    	; 0x78a <DIO_voidActivePinInPullUpResistance+0xec>
	case DIO_PORTB: SET_BIT(PORTB, copy_u8PinId); break;
 714:	a8 e3       	ldi	r26, 0x38	; 56
 716:	b0 e0       	ldi	r27, 0x00	; 0
 718:	e8 e3       	ldi	r30, 0x38	; 56
 71a:	f0 e0       	ldi	r31, 0x00	; 0
 71c:	80 81       	ld	r24, Z
 71e:	48 2f       	mov	r20, r24
 720:	8a 81       	ldd	r24, Y+2	; 0x02
 722:	28 2f       	mov	r18, r24
 724:	30 e0       	ldi	r19, 0x00	; 0
 726:	81 e0       	ldi	r24, 0x01	; 1
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	02 2e       	mov	r0, r18
 72c:	02 c0       	rjmp	.+4      	; 0x732 <DIO_voidActivePinInPullUpResistance+0x94>
 72e:	88 0f       	add	r24, r24
 730:	99 1f       	adc	r25, r25
 732:	0a 94       	dec	r0
 734:	e2 f7       	brpl	.-8      	; 0x72e <DIO_voidActivePinInPullUpResistance+0x90>
 736:	84 2b       	or	r24, r20
 738:	8c 93       	st	X, r24
 73a:	27 c0       	rjmp	.+78     	; 0x78a <DIO_voidActivePinInPullUpResistance+0xec>
	case DIO_PORTC: SET_BIT(PORTC, copy_u8PinId); break;
 73c:	a5 e3       	ldi	r26, 0x35	; 53
 73e:	b0 e0       	ldi	r27, 0x00	; 0
 740:	e5 e3       	ldi	r30, 0x35	; 53
 742:	f0 e0       	ldi	r31, 0x00	; 0
 744:	80 81       	ld	r24, Z
 746:	48 2f       	mov	r20, r24
 748:	8a 81       	ldd	r24, Y+2	; 0x02
 74a:	28 2f       	mov	r18, r24
 74c:	30 e0       	ldi	r19, 0x00	; 0
 74e:	81 e0       	ldi	r24, 0x01	; 1
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	02 2e       	mov	r0, r18
 754:	02 c0       	rjmp	.+4      	; 0x75a <DIO_voidActivePinInPullUpResistance+0xbc>
 756:	88 0f       	add	r24, r24
 758:	99 1f       	adc	r25, r25
 75a:	0a 94       	dec	r0
 75c:	e2 f7       	brpl	.-8      	; 0x756 <DIO_voidActivePinInPullUpResistance+0xb8>
 75e:	84 2b       	or	r24, r20
 760:	8c 93       	st	X, r24
 762:	13 c0       	rjmp	.+38     	; 0x78a <DIO_voidActivePinInPullUpResistance+0xec>
	case DIO_PORTD: SET_BIT(PORTD, copy_u8PinId); break;
 764:	a2 e3       	ldi	r26, 0x32	; 50
 766:	b0 e0       	ldi	r27, 0x00	; 0
 768:	e2 e3       	ldi	r30, 0x32	; 50
 76a:	f0 e0       	ldi	r31, 0x00	; 0
 76c:	80 81       	ld	r24, Z
 76e:	48 2f       	mov	r20, r24
 770:	8a 81       	ldd	r24, Y+2	; 0x02
 772:	28 2f       	mov	r18, r24
 774:	30 e0       	ldi	r19, 0x00	; 0
 776:	81 e0       	ldi	r24, 0x01	; 1
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	02 2e       	mov	r0, r18
 77c:	02 c0       	rjmp	.+4      	; 0x782 <DIO_voidActivePinInPullUpResistance+0xe4>
 77e:	88 0f       	add	r24, r24
 780:	99 1f       	adc	r25, r25
 782:	0a 94       	dec	r0
 784:	e2 f7       	brpl	.-8      	; 0x77e <DIO_voidActivePinInPullUpResistance+0xe0>
 786:	84 2b       	or	r24, r20
 788:	8c 93       	st	X, r24
	}
}
 78a:	0f 90       	pop	r0
 78c:	0f 90       	pop	r0
 78e:	0f 90       	pop	r0
 790:	0f 90       	pop	r0
 792:	cf 91       	pop	r28
 794:	df 91       	pop	r29
 796:	08 95       	ret

00000798 <DIO_voidSetPortDirection>:


                      /*************** PORT APIS ***************/

void DIO_voidSetPortDirection(u8 copy_u8PortId, u8 copy_u8PortDirection)
{
 798:	df 93       	push	r29
 79a:	cf 93       	push	r28
 79c:	00 d0       	rcall	.+0      	; 0x79e <DIO_voidSetPortDirection+0x6>
 79e:	00 d0       	rcall	.+0      	; 0x7a0 <DIO_voidSetPortDirection+0x8>
 7a0:	cd b7       	in	r28, 0x3d	; 61
 7a2:	de b7       	in	r29, 0x3e	; 62
 7a4:	89 83       	std	Y+1, r24	; 0x01
 7a6:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8PortId)
 7a8:	89 81       	ldd	r24, Y+1	; 0x01
 7aa:	28 2f       	mov	r18, r24
 7ac:	30 e0       	ldi	r19, 0x00	; 0
 7ae:	3c 83       	std	Y+4, r19	; 0x04
 7b0:	2b 83       	std	Y+3, r18	; 0x03
 7b2:	8b 81       	ldd	r24, Y+3	; 0x03
 7b4:	9c 81       	ldd	r25, Y+4	; 0x04
 7b6:	81 30       	cpi	r24, 0x01	; 1
 7b8:	91 05       	cpc	r25, r1
 7ba:	d1 f0       	breq	.+52     	; 0x7f0 <DIO_voidSetPortDirection+0x58>
 7bc:	2b 81       	ldd	r18, Y+3	; 0x03
 7be:	3c 81       	ldd	r19, Y+4	; 0x04
 7c0:	22 30       	cpi	r18, 0x02	; 2
 7c2:	31 05       	cpc	r19, r1
 7c4:	2c f4       	brge	.+10     	; 0x7d0 <DIO_voidSetPortDirection+0x38>
 7c6:	8b 81       	ldd	r24, Y+3	; 0x03
 7c8:	9c 81       	ldd	r25, Y+4	; 0x04
 7ca:	00 97       	sbiw	r24, 0x00	; 0
 7cc:	61 f0       	breq	.+24     	; 0x7e6 <DIO_voidSetPortDirection+0x4e>
 7ce:	1e c0       	rjmp	.+60     	; 0x80c <DIO_voidSetPortDirection+0x74>
 7d0:	2b 81       	ldd	r18, Y+3	; 0x03
 7d2:	3c 81       	ldd	r19, Y+4	; 0x04
 7d4:	22 30       	cpi	r18, 0x02	; 2
 7d6:	31 05       	cpc	r19, r1
 7d8:	81 f0       	breq	.+32     	; 0x7fa <DIO_voidSetPortDirection+0x62>
 7da:	8b 81       	ldd	r24, Y+3	; 0x03
 7dc:	9c 81       	ldd	r25, Y+4	; 0x04
 7de:	83 30       	cpi	r24, 0x03	; 3
 7e0:	91 05       	cpc	r25, r1
 7e2:	81 f0       	breq	.+32     	; 0x804 <DIO_voidSetPortDirection+0x6c>
 7e4:	13 c0       	rjmp	.+38     	; 0x80c <DIO_voidSetPortDirection+0x74>
	{
	case DIO_PORTA:DDRA = copy_u8PortDirection;break;
 7e6:	ea e3       	ldi	r30, 0x3A	; 58
 7e8:	f0 e0       	ldi	r31, 0x00	; 0
 7ea:	8a 81       	ldd	r24, Y+2	; 0x02
 7ec:	80 83       	st	Z, r24
 7ee:	0e c0       	rjmp	.+28     	; 0x80c <DIO_voidSetPortDirection+0x74>
	case DIO_PORTB:DDRB = copy_u8PortDirection;break;
 7f0:	e7 e3       	ldi	r30, 0x37	; 55
 7f2:	f0 e0       	ldi	r31, 0x00	; 0
 7f4:	8a 81       	ldd	r24, Y+2	; 0x02
 7f6:	80 83       	st	Z, r24
 7f8:	09 c0       	rjmp	.+18     	; 0x80c <DIO_voidSetPortDirection+0x74>
	case DIO_PORTC:DDRC = copy_u8PortDirection;break;
 7fa:	e4 e3       	ldi	r30, 0x34	; 52
 7fc:	f0 e0       	ldi	r31, 0x00	; 0
 7fe:	8a 81       	ldd	r24, Y+2	; 0x02
 800:	80 83       	st	Z, r24
 802:	04 c0       	rjmp	.+8      	; 0x80c <DIO_voidSetPortDirection+0x74>
	case DIO_PORTD:DDRD = copy_u8PortDirection;break;
 804:	e1 e3       	ldi	r30, 0x31	; 49
 806:	f0 e0       	ldi	r31, 0x00	; 0
 808:	8a 81       	ldd	r24, Y+2	; 0x02
 80a:	80 83       	st	Z, r24
	}
}
 80c:	0f 90       	pop	r0
 80e:	0f 90       	pop	r0
 810:	0f 90       	pop	r0
 812:	0f 90       	pop	r0
 814:	cf 91       	pop	r28
 816:	df 91       	pop	r29
 818:	08 95       	ret

0000081a <DIO_voidSetPortValue>:

void DIO_voidSetPortValue(u8 copy_u8PortId, u8 copy_u8PortValue)
{
 81a:	df 93       	push	r29
 81c:	cf 93       	push	r28
 81e:	00 d0       	rcall	.+0      	; 0x820 <DIO_voidSetPortValue+0x6>
 820:	00 d0       	rcall	.+0      	; 0x822 <DIO_voidSetPortValue+0x8>
 822:	cd b7       	in	r28, 0x3d	; 61
 824:	de b7       	in	r29, 0x3e	; 62
 826:	89 83       	std	Y+1, r24	; 0x01
 828:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8PortId)
 82a:	89 81       	ldd	r24, Y+1	; 0x01
 82c:	28 2f       	mov	r18, r24
 82e:	30 e0       	ldi	r19, 0x00	; 0
 830:	3c 83       	std	Y+4, r19	; 0x04
 832:	2b 83       	std	Y+3, r18	; 0x03
 834:	8b 81       	ldd	r24, Y+3	; 0x03
 836:	9c 81       	ldd	r25, Y+4	; 0x04
 838:	81 30       	cpi	r24, 0x01	; 1
 83a:	91 05       	cpc	r25, r1
 83c:	d1 f0       	breq	.+52     	; 0x872 <__stack+0x13>
 83e:	2b 81       	ldd	r18, Y+3	; 0x03
 840:	3c 81       	ldd	r19, Y+4	; 0x04
 842:	22 30       	cpi	r18, 0x02	; 2
 844:	31 05       	cpc	r19, r1
 846:	2c f4       	brge	.+10     	; 0x852 <DIO_voidSetPortValue+0x38>
 848:	8b 81       	ldd	r24, Y+3	; 0x03
 84a:	9c 81       	ldd	r25, Y+4	; 0x04
 84c:	00 97       	sbiw	r24, 0x00	; 0
 84e:	61 f0       	breq	.+24     	; 0x868 <__stack+0x9>
 850:	1e c0       	rjmp	.+60     	; 0x88e <__stack+0x2f>
 852:	2b 81       	ldd	r18, Y+3	; 0x03
 854:	3c 81       	ldd	r19, Y+4	; 0x04
 856:	22 30       	cpi	r18, 0x02	; 2
 858:	31 05       	cpc	r19, r1
 85a:	81 f0       	breq	.+32     	; 0x87c <__stack+0x1d>
 85c:	8b 81       	ldd	r24, Y+3	; 0x03
 85e:	9c 81       	ldd	r25, Y+4	; 0x04
 860:	83 30       	cpi	r24, 0x03	; 3
 862:	91 05       	cpc	r25, r1
 864:	81 f0       	breq	.+32     	; 0x886 <__stack+0x27>
 866:	13 c0       	rjmp	.+38     	; 0x88e <__stack+0x2f>
	{
	case DIO_PORTA:PORTA = copy_u8PortValue;break;
 868:	eb e3       	ldi	r30, 0x3B	; 59
 86a:	f0 e0       	ldi	r31, 0x00	; 0
 86c:	8a 81       	ldd	r24, Y+2	; 0x02
 86e:	80 83       	st	Z, r24
 870:	0e c0       	rjmp	.+28     	; 0x88e <__stack+0x2f>
	case DIO_PORTB:PORTB = copy_u8PortValue;break;
 872:	e8 e3       	ldi	r30, 0x38	; 56
 874:	f0 e0       	ldi	r31, 0x00	; 0
 876:	8a 81       	ldd	r24, Y+2	; 0x02
 878:	80 83       	st	Z, r24
 87a:	09 c0       	rjmp	.+18     	; 0x88e <__stack+0x2f>
	case DIO_PORTC:PORTC = copy_u8PortValue;break;
 87c:	e5 e3       	ldi	r30, 0x35	; 53
 87e:	f0 e0       	ldi	r31, 0x00	; 0
 880:	8a 81       	ldd	r24, Y+2	; 0x02
 882:	80 83       	st	Z, r24
 884:	04 c0       	rjmp	.+8      	; 0x88e <__stack+0x2f>
	case DIO_PORTD:PORTD = copy_u8PortValue;break;
 886:	e2 e3       	ldi	r30, 0x32	; 50
 888:	f0 e0       	ldi	r31, 0x00	; 0
 88a:	8a 81       	ldd	r24, Y+2	; 0x02
 88c:	80 83       	st	Z, r24
	}
}
 88e:	0f 90       	pop	r0
 890:	0f 90       	pop	r0
 892:	0f 90       	pop	r0
 894:	0f 90       	pop	r0
 896:	cf 91       	pop	r28
 898:	df 91       	pop	r29
 89a:	08 95       	ret

0000089c <DIO_voidGetPortValue>:

void DIO_voidGetPortValue(u8 copy_u8PortId, u8 *copy_pu8_PinValue)
{
 89c:	df 93       	push	r29
 89e:	cf 93       	push	r28
 8a0:	00 d0       	rcall	.+0      	; 0x8a2 <DIO_voidGetPortValue+0x6>
 8a2:	00 d0       	rcall	.+0      	; 0x8a4 <DIO_voidGetPortValue+0x8>
 8a4:	0f 92       	push	r0
 8a6:	cd b7       	in	r28, 0x3d	; 61
 8a8:	de b7       	in	r29, 0x3e	; 62
 8aa:	89 83       	std	Y+1, r24	; 0x01
 8ac:	7b 83       	std	Y+3, r23	; 0x03
 8ae:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8PortId)
 8b0:	89 81       	ldd	r24, Y+1	; 0x01
 8b2:	28 2f       	mov	r18, r24
 8b4:	30 e0       	ldi	r19, 0x00	; 0
 8b6:	3d 83       	std	Y+5, r19	; 0x05
 8b8:	2c 83       	std	Y+4, r18	; 0x04
 8ba:	8c 81       	ldd	r24, Y+4	; 0x04
 8bc:	9d 81       	ldd	r25, Y+5	; 0x05
 8be:	81 30       	cpi	r24, 0x01	; 1
 8c0:	91 05       	cpc	r25, r1
 8c2:	e1 f0       	breq	.+56     	; 0x8fc <DIO_voidGetPortValue+0x60>
 8c4:	2c 81       	ldd	r18, Y+4	; 0x04
 8c6:	3d 81       	ldd	r19, Y+5	; 0x05
 8c8:	22 30       	cpi	r18, 0x02	; 2
 8ca:	31 05       	cpc	r19, r1
 8cc:	2c f4       	brge	.+10     	; 0x8d8 <DIO_voidGetPortValue+0x3c>
 8ce:	8c 81       	ldd	r24, Y+4	; 0x04
 8d0:	9d 81       	ldd	r25, Y+5	; 0x05
 8d2:	00 97       	sbiw	r24, 0x00	; 0
 8d4:	61 f0       	breq	.+24     	; 0x8ee <DIO_voidGetPortValue+0x52>
 8d6:	26 c0       	rjmp	.+76     	; 0x924 <DIO_voidGetPortValue+0x88>
 8d8:	2c 81       	ldd	r18, Y+4	; 0x04
 8da:	3d 81       	ldd	r19, Y+5	; 0x05
 8dc:	22 30       	cpi	r18, 0x02	; 2
 8de:	31 05       	cpc	r19, r1
 8e0:	a1 f0       	breq	.+40     	; 0x90a <DIO_voidGetPortValue+0x6e>
 8e2:	8c 81       	ldd	r24, Y+4	; 0x04
 8e4:	9d 81       	ldd	r25, Y+5	; 0x05
 8e6:	83 30       	cpi	r24, 0x03	; 3
 8e8:	91 05       	cpc	r25, r1
 8ea:	b1 f0       	breq	.+44     	; 0x918 <DIO_voidGetPortValue+0x7c>
 8ec:	1b c0       	rjmp	.+54     	; 0x924 <DIO_voidGetPortValue+0x88>
	{
	case DIO_PORTA: *copy_pu8_PinValue = PORTA;break;
 8ee:	eb e3       	ldi	r30, 0x3B	; 59
 8f0:	f0 e0       	ldi	r31, 0x00	; 0
 8f2:	80 81       	ld	r24, Z
 8f4:	ea 81       	ldd	r30, Y+2	; 0x02
 8f6:	fb 81       	ldd	r31, Y+3	; 0x03
 8f8:	80 83       	st	Z, r24
 8fa:	14 c0       	rjmp	.+40     	; 0x924 <DIO_voidGetPortValue+0x88>
	case DIO_PORTB: *copy_pu8_PinValue = PORTB;break;
 8fc:	e8 e3       	ldi	r30, 0x38	; 56
 8fe:	f0 e0       	ldi	r31, 0x00	; 0
 900:	80 81       	ld	r24, Z
 902:	ea 81       	ldd	r30, Y+2	; 0x02
 904:	fb 81       	ldd	r31, Y+3	; 0x03
 906:	80 83       	st	Z, r24
 908:	0d c0       	rjmp	.+26     	; 0x924 <DIO_voidGetPortValue+0x88>
	case DIO_PORTC: *copy_pu8_PinValue = PORTC;break;
 90a:	e5 e3       	ldi	r30, 0x35	; 53
 90c:	f0 e0       	ldi	r31, 0x00	; 0
 90e:	80 81       	ld	r24, Z
 910:	ea 81       	ldd	r30, Y+2	; 0x02
 912:	fb 81       	ldd	r31, Y+3	; 0x03
 914:	80 83       	st	Z, r24
 916:	06 c0       	rjmp	.+12     	; 0x924 <DIO_voidGetPortValue+0x88>
	case DIO_PORTD: *copy_pu8_PinValue = PORTD;break;
 918:	e2 e3       	ldi	r30, 0x32	; 50
 91a:	f0 e0       	ldi	r31, 0x00	; 0
 91c:	80 81       	ld	r24, Z
 91e:	ea 81       	ldd	r30, Y+2	; 0x02
 920:	fb 81       	ldd	r31, Y+3	; 0x03
 922:	80 83       	st	Z, r24
	}
}
 924:	0f 90       	pop	r0
 926:	0f 90       	pop	r0
 928:	0f 90       	pop	r0
 92a:	0f 90       	pop	r0
 92c:	0f 90       	pop	r0
 92e:	cf 91       	pop	r28
 930:	df 91       	pop	r29
 932:	08 95       	ret

00000934 <DIO_voidTogglePortValue>:

void DIO_voidTogglePortValue(u8 copy_u8PortId)
{
 934:	df 93       	push	r29
 936:	cf 93       	push	r28
 938:	00 d0       	rcall	.+0      	; 0x93a <DIO_voidTogglePortValue+0x6>
 93a:	0f 92       	push	r0
 93c:	cd b7       	in	r28, 0x3d	; 61
 93e:	de b7       	in	r29, 0x3e	; 62
 940:	89 83       	std	Y+1, r24	; 0x01
	switch(copy_u8PortId)
 942:	89 81       	ldd	r24, Y+1	; 0x01
 944:	28 2f       	mov	r18, r24
 946:	30 e0       	ldi	r19, 0x00	; 0
 948:	3b 83       	std	Y+3, r19	; 0x03
 94a:	2a 83       	std	Y+2, r18	; 0x02
 94c:	8a 81       	ldd	r24, Y+2	; 0x02
 94e:	9b 81       	ldd	r25, Y+3	; 0x03
 950:	81 30       	cpi	r24, 0x01	; 1
 952:	91 05       	cpc	r25, r1
 954:	e9 f0       	breq	.+58     	; 0x990 <DIO_voidTogglePortValue+0x5c>
 956:	2a 81       	ldd	r18, Y+2	; 0x02
 958:	3b 81       	ldd	r19, Y+3	; 0x03
 95a:	22 30       	cpi	r18, 0x02	; 2
 95c:	31 05       	cpc	r19, r1
 95e:	2c f4       	brge	.+10     	; 0x96a <DIO_voidTogglePortValue+0x36>
 960:	8a 81       	ldd	r24, Y+2	; 0x02
 962:	9b 81       	ldd	r25, Y+3	; 0x03
 964:	00 97       	sbiw	r24, 0x00	; 0
 966:	61 f0       	breq	.+24     	; 0x980 <DIO_voidTogglePortValue+0x4c>
 968:	2a c0       	rjmp	.+84     	; 0x9be <DIO_voidTogglePortValue+0x8a>
 96a:	2a 81       	ldd	r18, Y+2	; 0x02
 96c:	3b 81       	ldd	r19, Y+3	; 0x03
 96e:	22 30       	cpi	r18, 0x02	; 2
 970:	31 05       	cpc	r19, r1
 972:	b1 f0       	breq	.+44     	; 0x9a0 <DIO_voidTogglePortValue+0x6c>
 974:	8a 81       	ldd	r24, Y+2	; 0x02
 976:	9b 81       	ldd	r25, Y+3	; 0x03
 978:	83 30       	cpi	r24, 0x03	; 3
 97a:	91 05       	cpc	r25, r1
 97c:	c9 f0       	breq	.+50     	; 0x9b0 <DIO_voidTogglePortValue+0x7c>
 97e:	1f c0       	rjmp	.+62     	; 0x9be <DIO_voidTogglePortValue+0x8a>
	{
	case DIO_PORTA: PORTA^=DIO_PORT_HIGH;break;
 980:	ab e3       	ldi	r26, 0x3B	; 59
 982:	b0 e0       	ldi	r27, 0x00	; 0
 984:	eb e3       	ldi	r30, 0x3B	; 59
 986:	f0 e0       	ldi	r31, 0x00	; 0
 988:	80 81       	ld	r24, Z
 98a:	80 95       	com	r24
 98c:	8c 93       	st	X, r24
 98e:	17 c0       	rjmp	.+46     	; 0x9be <DIO_voidTogglePortValue+0x8a>
	case DIO_PORTB: PORTB^=DIO_PORT_HIGH;break;
 990:	a8 e3       	ldi	r26, 0x38	; 56
 992:	b0 e0       	ldi	r27, 0x00	; 0
 994:	e8 e3       	ldi	r30, 0x38	; 56
 996:	f0 e0       	ldi	r31, 0x00	; 0
 998:	80 81       	ld	r24, Z
 99a:	80 95       	com	r24
 99c:	8c 93       	st	X, r24
 99e:	0f c0       	rjmp	.+30     	; 0x9be <DIO_voidTogglePortValue+0x8a>
	case DIO_PORTC: PORTC^=DIO_PORT_HIGH;break;
 9a0:	a5 e3       	ldi	r26, 0x35	; 53
 9a2:	b0 e0       	ldi	r27, 0x00	; 0
 9a4:	e5 e3       	ldi	r30, 0x35	; 53
 9a6:	f0 e0       	ldi	r31, 0x00	; 0
 9a8:	80 81       	ld	r24, Z
 9aa:	80 95       	com	r24
 9ac:	8c 93       	st	X, r24
 9ae:	07 c0       	rjmp	.+14     	; 0x9be <DIO_voidTogglePortValue+0x8a>
	case DIO_PORTD: PORTD^=DIO_PORT_HIGH;break;
 9b0:	a2 e3       	ldi	r26, 0x32	; 50
 9b2:	b0 e0       	ldi	r27, 0x00	; 0
 9b4:	e2 e3       	ldi	r30, 0x32	; 50
 9b6:	f0 e0       	ldi	r31, 0x00	; 0
 9b8:	80 81       	ld	r24, Z
 9ba:	80 95       	com	r24
 9bc:	8c 93       	st	X, r24
	}
}
 9be:	0f 90       	pop	r0
 9c0:	0f 90       	pop	r0
 9c2:	0f 90       	pop	r0
 9c4:	cf 91       	pop	r28
 9c6:	df 91       	pop	r29
 9c8:	08 95       	ret

000009ca <DIO_voidActivePortInPullUpResistance>:

void DIO_voidActivePortInPullUpResistance(u8 copy_u8PortId)
{
 9ca:	df 93       	push	r29
 9cc:	cf 93       	push	r28
 9ce:	00 d0       	rcall	.+0      	; 0x9d0 <DIO_voidActivePortInPullUpResistance+0x6>
 9d0:	0f 92       	push	r0
 9d2:	cd b7       	in	r28, 0x3d	; 61
 9d4:	de b7       	in	r29, 0x3e	; 62
 9d6:	89 83       	std	Y+1, r24	; 0x01
	switch(copy_u8PortId)
 9d8:	89 81       	ldd	r24, Y+1	; 0x01
 9da:	28 2f       	mov	r18, r24
 9dc:	30 e0       	ldi	r19, 0x00	; 0
 9de:	3b 83       	std	Y+3, r19	; 0x03
 9e0:	2a 83       	std	Y+2, r18	; 0x02
 9e2:	8a 81       	ldd	r24, Y+2	; 0x02
 9e4:	9b 81       	ldd	r25, Y+3	; 0x03
 9e6:	81 30       	cpi	r24, 0x01	; 1
 9e8:	91 05       	cpc	r25, r1
 9ea:	d1 f0       	breq	.+52     	; 0xa20 <DIO_voidActivePortInPullUpResistance+0x56>
 9ec:	2a 81       	ldd	r18, Y+2	; 0x02
 9ee:	3b 81       	ldd	r19, Y+3	; 0x03
 9f0:	22 30       	cpi	r18, 0x02	; 2
 9f2:	31 05       	cpc	r19, r1
 9f4:	2c f4       	brge	.+10     	; 0xa00 <DIO_voidActivePortInPullUpResistance+0x36>
 9f6:	8a 81       	ldd	r24, Y+2	; 0x02
 9f8:	9b 81       	ldd	r25, Y+3	; 0x03
 9fa:	00 97       	sbiw	r24, 0x00	; 0
 9fc:	61 f0       	breq	.+24     	; 0xa16 <DIO_voidActivePortInPullUpResistance+0x4c>
 9fe:	1e c0       	rjmp	.+60     	; 0xa3c <DIO_voidActivePortInPullUpResistance+0x72>
 a00:	2a 81       	ldd	r18, Y+2	; 0x02
 a02:	3b 81       	ldd	r19, Y+3	; 0x03
 a04:	22 30       	cpi	r18, 0x02	; 2
 a06:	31 05       	cpc	r19, r1
 a08:	81 f0       	breq	.+32     	; 0xa2a <DIO_voidActivePortInPullUpResistance+0x60>
 a0a:	8a 81       	ldd	r24, Y+2	; 0x02
 a0c:	9b 81       	ldd	r25, Y+3	; 0x03
 a0e:	83 30       	cpi	r24, 0x03	; 3
 a10:	91 05       	cpc	r25, r1
 a12:	81 f0       	breq	.+32     	; 0xa34 <DIO_voidActivePortInPullUpResistance+0x6a>
 a14:	13 c0       	rjmp	.+38     	; 0xa3c <DIO_voidActivePortInPullUpResistance+0x72>
	{
	case DIO_PORTA: PORTA = DIO_PORT_HIGH;break;
 a16:	eb e3       	ldi	r30, 0x3B	; 59
 a18:	f0 e0       	ldi	r31, 0x00	; 0
 a1a:	8f ef       	ldi	r24, 0xFF	; 255
 a1c:	80 83       	st	Z, r24
 a1e:	0e c0       	rjmp	.+28     	; 0xa3c <DIO_voidActivePortInPullUpResistance+0x72>
	case DIO_PORTB: PORTB = DIO_PORT_HIGH;break;
 a20:	e8 e3       	ldi	r30, 0x38	; 56
 a22:	f0 e0       	ldi	r31, 0x00	; 0
 a24:	8f ef       	ldi	r24, 0xFF	; 255
 a26:	80 83       	st	Z, r24
 a28:	09 c0       	rjmp	.+18     	; 0xa3c <DIO_voidActivePortInPullUpResistance+0x72>
	case DIO_PORTC: PORTC = DIO_PORT_HIGH;break;
 a2a:	e5 e3       	ldi	r30, 0x35	; 53
 a2c:	f0 e0       	ldi	r31, 0x00	; 0
 a2e:	8f ef       	ldi	r24, 0xFF	; 255
 a30:	80 83       	st	Z, r24
 a32:	04 c0       	rjmp	.+8      	; 0xa3c <DIO_voidActivePortInPullUpResistance+0x72>
	case DIO_PORTD: PORTD = DIO_PORT_HIGH;break;
 a34:	e2 e3       	ldi	r30, 0x32	; 50
 a36:	f0 e0       	ldi	r31, 0x00	; 0
 a38:	8f ef       	ldi	r24, 0xFF	; 255
 a3a:	80 83       	st	Z, r24
	}
}
 a3c:	0f 90       	pop	r0
 a3e:	0f 90       	pop	r0
 a40:	0f 90       	pop	r0
 a42:	cf 91       	pop	r28
 a44:	df 91       	pop	r29
 a46:	08 95       	ret

00000a48 <EXTI_voidEnable>:
#include "EXTI_interface.h"

static void (*PRV_pFunCallBackINT1) (void) = NULL;

void EXTI_voidEnable (EXTI_Source copy_enumInterruptSource, EXTI_SenseControl copy_enumSenseControl)
{
 a48:	df 93       	push	r29
 a4a:	cf 93       	push	r28
 a4c:	00 d0       	rcall	.+0      	; 0xa4e <EXTI_voidEnable+0x6>
 a4e:	00 d0       	rcall	.+0      	; 0xa50 <EXTI_voidEnable+0x8>
 a50:	00 d0       	rcall	.+0      	; 0xa52 <EXTI_voidEnable+0xa>
 a52:	cd b7       	in	r28, 0x3d	; 61
 a54:	de b7       	in	r29, 0x3e	; 62
 a56:	89 83       	std	Y+1, r24	; 0x01
 a58:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_enumInterruptSource)
 a5a:	89 81       	ldd	r24, Y+1	; 0x01
 a5c:	28 2f       	mov	r18, r24
 a5e:	30 e0       	ldi	r19, 0x00	; 0
 a60:	3e 83       	std	Y+6, r19	; 0x06
 a62:	2d 83       	std	Y+5, r18	; 0x05
 a64:	8d 81       	ldd	r24, Y+5	; 0x05
 a66:	9e 81       	ldd	r25, Y+6	; 0x06
 a68:	00 97       	sbiw	r24, 0x00	; 0
 a6a:	09 f4       	brne	.+2      	; 0xa6e <EXTI_voidEnable+0x26>
 a6c:	67 c0       	rjmp	.+206    	; 0xb3c <EXTI_voidEnable+0xf4>
 a6e:	2d 81       	ldd	r18, Y+5	; 0x05
 a70:	3e 81       	ldd	r19, Y+6	; 0x06
 a72:	21 30       	cpi	r18, 0x01	; 1
 a74:	31 05       	cpc	r19, r1
 a76:	09 f0       	breq	.+2      	; 0xa7a <EXTI_voidEnable+0x32>
 a78:	61 c0       	rjmp	.+194    	; 0xb3c <EXTI_voidEnable+0xf4>
	{
	case EXTI_INT0:  ;break;

	case EXTI_INT1:
		switch (copy_enumSenseControl)
 a7a:	8a 81       	ldd	r24, Y+2	; 0x02
 a7c:	28 2f       	mov	r18, r24
 a7e:	30 e0       	ldi	r19, 0x00	; 0
 a80:	3c 83       	std	Y+4, r19	; 0x04
 a82:	2b 83       	std	Y+3, r18	; 0x03
 a84:	8b 81       	ldd	r24, Y+3	; 0x03
 a86:	9c 81       	ldd	r25, Y+4	; 0x04
 a88:	81 30       	cpi	r24, 0x01	; 1
 a8a:	91 05       	cpc	r25, r1
 a8c:	21 f1       	breq	.+72     	; 0xad6 <EXTI_voidEnable+0x8e>
 a8e:	2b 81       	ldd	r18, Y+3	; 0x03
 a90:	3c 81       	ldd	r19, Y+4	; 0x04
 a92:	22 30       	cpi	r18, 0x02	; 2
 a94:	31 05       	cpc	r19, r1
 a96:	2c f4       	brge	.+10     	; 0xaa2 <EXTI_voidEnable+0x5a>
 a98:	8b 81       	ldd	r24, Y+3	; 0x03
 a9a:	9c 81       	ldd	r25, Y+4	; 0x04
 a9c:	00 97       	sbiw	r24, 0x00	; 0
 a9e:	61 f0       	breq	.+24     	; 0xab8 <EXTI_voidEnable+0x70>
 aa0:	46 c0       	rjmp	.+140    	; 0xb2e <EXTI_voidEnable+0xe6>
 aa2:	2b 81       	ldd	r18, Y+3	; 0x03
 aa4:	3c 81       	ldd	r19, Y+4	; 0x04
 aa6:	22 30       	cpi	r18, 0x02	; 2
 aa8:	31 05       	cpc	r19, r1
 aaa:	21 f1       	breq	.+72     	; 0xaf4 <EXTI_voidEnable+0xac>
 aac:	8b 81       	ldd	r24, Y+3	; 0x03
 aae:	9c 81       	ldd	r25, Y+4	; 0x04
 ab0:	83 30       	cpi	r24, 0x03	; 3
 ab2:	91 05       	cpc	r25, r1
 ab4:	71 f1       	breq	.+92     	; 0xb12 <EXTI_voidEnable+0xca>
 ab6:	3b c0       	rjmp	.+118    	; 0xb2e <EXTI_voidEnable+0xe6>
		{
		case EXTI_RISING_EDGE:
			SET_BIT(MCUCR_REG, ISC11);
 ab8:	a5 e5       	ldi	r26, 0x55	; 85
 aba:	b0 e0       	ldi	r27, 0x00	; 0
 abc:	e5 e5       	ldi	r30, 0x55	; 85
 abe:	f0 e0       	ldi	r31, 0x00	; 0
 ac0:	80 81       	ld	r24, Z
 ac2:	88 60       	ori	r24, 0x08	; 8
 ac4:	8c 93       	st	X, r24
			SET_BIT(MCUCR_REG, ISC10);
 ac6:	a5 e5       	ldi	r26, 0x55	; 85
 ac8:	b0 e0       	ldi	r27, 0x00	; 0
 aca:	e5 e5       	ldi	r30, 0x55	; 85
 acc:	f0 e0       	ldi	r31, 0x00	; 0
 ace:	80 81       	ld	r24, Z
 ad0:	84 60       	ori	r24, 0x04	; 4
 ad2:	8c 93       	st	X, r24
 ad4:	2c c0       	rjmp	.+88     	; 0xb2e <EXTI_voidEnable+0xe6>
			break;

		case EXTI_FALLING_EDGE:
			SET_BIT(MCUCR_REG, ISC11);
 ad6:	a5 e5       	ldi	r26, 0x55	; 85
 ad8:	b0 e0       	ldi	r27, 0x00	; 0
 ada:	e5 e5       	ldi	r30, 0x55	; 85
 adc:	f0 e0       	ldi	r31, 0x00	; 0
 ade:	80 81       	ld	r24, Z
 ae0:	88 60       	ori	r24, 0x08	; 8
 ae2:	8c 93       	st	X, r24
			CLR_BIT(MCUCR_REG, ISC10);
 ae4:	a5 e5       	ldi	r26, 0x55	; 85
 ae6:	b0 e0       	ldi	r27, 0x00	; 0
 ae8:	e5 e5       	ldi	r30, 0x55	; 85
 aea:	f0 e0       	ldi	r31, 0x00	; 0
 aec:	80 81       	ld	r24, Z
 aee:	8b 7f       	andi	r24, 0xFB	; 251
 af0:	8c 93       	st	X, r24
 af2:	1d c0       	rjmp	.+58     	; 0xb2e <EXTI_voidEnable+0xe6>
			break;

		case EXTI_LOW_LEVEL:
			CLR_BIT(MCUCR_REG, ISC11);
 af4:	a5 e5       	ldi	r26, 0x55	; 85
 af6:	b0 e0       	ldi	r27, 0x00	; 0
 af8:	e5 e5       	ldi	r30, 0x55	; 85
 afa:	f0 e0       	ldi	r31, 0x00	; 0
 afc:	80 81       	ld	r24, Z
 afe:	87 7f       	andi	r24, 0xF7	; 247
 b00:	8c 93       	st	X, r24
			CLR_BIT(MCUCR_REG, ISC10);
 b02:	a5 e5       	ldi	r26, 0x55	; 85
 b04:	b0 e0       	ldi	r27, 0x00	; 0
 b06:	e5 e5       	ldi	r30, 0x55	; 85
 b08:	f0 e0       	ldi	r31, 0x00	; 0
 b0a:	80 81       	ld	r24, Z
 b0c:	8b 7f       	andi	r24, 0xFB	; 251
 b0e:	8c 93       	st	X, r24
 b10:	0e c0       	rjmp	.+28     	; 0xb2e <EXTI_voidEnable+0xe6>
			break;

		case EXTI_ANY_LOGICAL_CHANGE:
			CLR_BIT(MCUCR_REG, ISC11);
 b12:	a5 e5       	ldi	r26, 0x55	; 85
 b14:	b0 e0       	ldi	r27, 0x00	; 0
 b16:	e5 e5       	ldi	r30, 0x55	; 85
 b18:	f0 e0       	ldi	r31, 0x00	; 0
 b1a:	80 81       	ld	r24, Z
 b1c:	87 7f       	andi	r24, 0xF7	; 247
 b1e:	8c 93       	st	X, r24
			SET_BIT(MCUCR_REG, ISC10);
 b20:	a5 e5       	ldi	r26, 0x55	; 85
 b22:	b0 e0       	ldi	r27, 0x00	; 0
 b24:	e5 e5       	ldi	r30, 0x55	; 85
 b26:	f0 e0       	ldi	r31, 0x00	; 0
 b28:	80 81       	ld	r24, Z
 b2a:	84 60       	ori	r24, 0x04	; 4
 b2c:	8c 93       	st	X, r24
			break;
		}
		SET_BIT(GICR_REG, INT1);   //ENABLE EXTI_1
 b2e:	ab e5       	ldi	r26, 0x5B	; 91
 b30:	b0 e0       	ldi	r27, 0x00	; 0
 b32:	eb e5       	ldi	r30, 0x5B	; 91
 b34:	f0 e0       	ldi	r31, 0x00	; 0
 b36:	80 81       	ld	r24, Z
 b38:	80 68       	ori	r24, 0x80	; 128
 b3a:	8c 93       	st	X, r24

		break;

		case EXTI_INT2:  ;break;
	}
}
 b3c:	26 96       	adiw	r28, 0x06	; 6
 b3e:	0f b6       	in	r0, 0x3f	; 63
 b40:	f8 94       	cli
 b42:	de bf       	out	0x3e, r29	; 62
 b44:	0f be       	out	0x3f, r0	; 63
 b46:	cd bf       	out	0x3d, r28	; 61
 b48:	cf 91       	pop	r28
 b4a:	df 91       	pop	r29
 b4c:	08 95       	ret

00000b4e <EXTI_voidDisable>:

void EXTI_voidDisable (EXTI_Source copy_enumInterruptSource)
{
 b4e:	df 93       	push	r29
 b50:	cf 93       	push	r28
 b52:	00 d0       	rcall	.+0      	; 0xb54 <EXTI_voidDisable+0x6>
 b54:	0f 92       	push	r0
 b56:	cd b7       	in	r28, 0x3d	; 61
 b58:	de b7       	in	r29, 0x3e	; 62
 b5a:	89 83       	std	Y+1, r24	; 0x01
	switch (copy_enumInterruptSource)
 b5c:	89 81       	ldd	r24, Y+1	; 0x01
 b5e:	28 2f       	mov	r18, r24
 b60:	30 e0       	ldi	r19, 0x00	; 0
 b62:	3b 83       	std	Y+3, r19	; 0x03
 b64:	2a 83       	std	Y+2, r18	; 0x02
 b66:	8a 81       	ldd	r24, Y+2	; 0x02
 b68:	9b 81       	ldd	r25, Y+3	; 0x03
 b6a:	81 30       	cpi	r24, 0x01	; 1
 b6c:	91 05       	cpc	r25, r1
 b6e:	89 f0       	breq	.+34     	; 0xb92 <EXTI_voidDisable+0x44>
 b70:	2a 81       	ldd	r18, Y+2	; 0x02
 b72:	3b 81       	ldd	r19, Y+3	; 0x03
 b74:	22 30       	cpi	r18, 0x02	; 2
 b76:	31 05       	cpc	r19, r1
 b78:	a1 f0       	breq	.+40     	; 0xba2 <EXTI_voidDisable+0x54>
 b7a:	8a 81       	ldd	r24, Y+2	; 0x02
 b7c:	9b 81       	ldd	r25, Y+3	; 0x03
 b7e:	00 97       	sbiw	r24, 0x00	; 0
 b80:	b9 f4       	brne	.+46     	; 0xbb0 <EXTI_voidDisable+0x62>
	{
	case  EXTI_INT0:
		CLR_BIT(GICR_REG, INT0);
 b82:	ab e5       	ldi	r26, 0x5B	; 91
 b84:	b0 e0       	ldi	r27, 0x00	; 0
 b86:	eb e5       	ldi	r30, 0x5B	; 91
 b88:	f0 e0       	ldi	r31, 0x00	; 0
 b8a:	80 81       	ld	r24, Z
 b8c:	8f 7b       	andi	r24, 0xBF	; 191
 b8e:	8c 93       	st	X, r24
 b90:	0f c0       	rjmp	.+30     	; 0xbb0 <EXTI_voidDisable+0x62>
		break;

	case EXTI_INT1:
		CLR_BIT(GICR_REG, INT1);
 b92:	ab e5       	ldi	r26, 0x5B	; 91
 b94:	b0 e0       	ldi	r27, 0x00	; 0
 b96:	eb e5       	ldi	r30, 0x5B	; 91
 b98:	f0 e0       	ldi	r31, 0x00	; 0
 b9a:	80 81       	ld	r24, Z
 b9c:	8f 77       	andi	r24, 0x7F	; 127
 b9e:	8c 93       	st	X, r24
 ba0:	07 c0       	rjmp	.+14     	; 0xbb0 <EXTI_voidDisable+0x62>
		break;

	case EXTI_INT2:
		CLR_BIT(GICR_REG, INT2);
 ba2:	ab e5       	ldi	r26, 0x5B	; 91
 ba4:	b0 e0       	ldi	r27, 0x00	; 0
 ba6:	eb e5       	ldi	r30, 0x5B	; 91
 ba8:	f0 e0       	ldi	r31, 0x00	; 0
 baa:	80 81       	ld	r24, Z
 bac:	8f 7d       	andi	r24, 0xDF	; 223
 bae:	8c 93       	st	X, r24
		break;
	}
}
 bb0:	0f 90       	pop	r0
 bb2:	0f 90       	pop	r0
 bb4:	0f 90       	pop	r0
 bb6:	cf 91       	pop	r28
 bb8:	df 91       	pop	r29
 bba:	08 95       	ret

00000bbc <EXTI_voidSetCallBackInt>:

void EXTI_voidSetCallBackInt(void(*copy_pFunAction)(void))
{
 bbc:	df 93       	push	r29
 bbe:	cf 93       	push	r28
 bc0:	00 d0       	rcall	.+0      	; 0xbc2 <EXTI_voidSetCallBackInt+0x6>
 bc2:	cd b7       	in	r28, 0x3d	; 61
 bc4:	de b7       	in	r29, 0x3e	; 62
 bc6:	9a 83       	std	Y+2, r25	; 0x02
 bc8:	89 83       	std	Y+1, r24	; 0x01
	if(copy_pFunAction!=NULL)
 bca:	89 81       	ldd	r24, Y+1	; 0x01
 bcc:	9a 81       	ldd	r25, Y+2	; 0x02
 bce:	00 97       	sbiw	r24, 0x00	; 0
 bd0:	31 f0       	breq	.+12     	; 0xbde <EXTI_voidSetCallBackInt+0x22>
	{
		PRV_pFunCallBackINT1 = copy_pFunAction;
 bd2:	89 81       	ldd	r24, Y+1	; 0x01
 bd4:	9a 81       	ldd	r25, Y+2	; 0x02
 bd6:	90 93 61 00 	sts	0x0061, r25
 bda:	80 93 60 00 	sts	0x0060, r24
	}
	else
	{
		//return error state
	}
}
 bde:	0f 90       	pop	r0
 be0:	0f 90       	pop	r0
 be2:	cf 91       	pop	r28
 be4:	df 91       	pop	r29
 be6:	08 95       	ret

00000be8 <__vector_1>:

void __vector_1(void) __attribute__((signal));    //EXTI 0
void __vector_1(void)
{
 be8:	1f 92       	push	r1
 bea:	0f 92       	push	r0
 bec:	0f b6       	in	r0, 0x3f	; 63
 bee:	0f 92       	push	r0
 bf0:	11 24       	eor	r1, r1
 bf2:	df 93       	push	r29
 bf4:	cf 93       	push	r28
 bf6:	cd b7       	in	r28, 0x3d	; 61
 bf8:	de b7       	in	r29, 0x3e	; 62

}
 bfa:	cf 91       	pop	r28
 bfc:	df 91       	pop	r29
 bfe:	0f 90       	pop	r0
 c00:	0f be       	out	0x3f, r0	; 63
 c02:	0f 90       	pop	r0
 c04:	1f 90       	pop	r1
 c06:	18 95       	reti

00000c08 <__vector_2>:

void __vector_2(void) __attribute__((signal));    //EXTI 1
void __vector_2(void)
{
 c08:	1f 92       	push	r1
 c0a:	0f 92       	push	r0
 c0c:	0f b6       	in	r0, 0x3f	; 63
 c0e:	0f 92       	push	r0
 c10:	11 24       	eor	r1, r1
 c12:	2f 93       	push	r18
 c14:	3f 93       	push	r19
 c16:	4f 93       	push	r20
 c18:	5f 93       	push	r21
 c1a:	6f 93       	push	r22
 c1c:	7f 93       	push	r23
 c1e:	8f 93       	push	r24
 c20:	9f 93       	push	r25
 c22:	af 93       	push	r26
 c24:	bf 93       	push	r27
 c26:	ef 93       	push	r30
 c28:	ff 93       	push	r31
 c2a:	df 93       	push	r29
 c2c:	cf 93       	push	r28
 c2e:	cd b7       	in	r28, 0x3d	; 61
 c30:	de b7       	in	r29, 0x3e	; 62
	if(PRV_pFunCallBackINT1 != NULL)
 c32:	80 91 60 00 	lds	r24, 0x0060
 c36:	90 91 61 00 	lds	r25, 0x0061
 c3a:	00 97       	sbiw	r24, 0x00	; 0
 c3c:	29 f0       	breq	.+10     	; 0xc48 <__vector_2+0x40>
	{
		PRV_pFunCallBackINT1();
 c3e:	e0 91 60 00 	lds	r30, 0x0060
 c42:	f0 91 61 00 	lds	r31, 0x0061
 c46:	09 95       	icall
	}
}
 c48:	cf 91       	pop	r28
 c4a:	df 91       	pop	r29
 c4c:	ff 91       	pop	r31
 c4e:	ef 91       	pop	r30
 c50:	bf 91       	pop	r27
 c52:	af 91       	pop	r26
 c54:	9f 91       	pop	r25
 c56:	8f 91       	pop	r24
 c58:	7f 91       	pop	r23
 c5a:	6f 91       	pop	r22
 c5c:	5f 91       	pop	r21
 c5e:	4f 91       	pop	r20
 c60:	3f 91       	pop	r19
 c62:	2f 91       	pop	r18
 c64:	0f 90       	pop	r0
 c66:	0f be       	out	0x3f, r0	; 63
 c68:	0f 90       	pop	r0
 c6a:	1f 90       	pop	r1
 c6c:	18 95       	reti

00000c6e <__vector_3>:

void __vector_3(void) __attribute__((signal));     //EXTI 2
void __vector_3(void)
{
 c6e:	1f 92       	push	r1
 c70:	0f 92       	push	r0
 c72:	0f b6       	in	r0, 0x3f	; 63
 c74:	0f 92       	push	r0
 c76:	11 24       	eor	r1, r1
 c78:	df 93       	push	r29
 c7a:	cf 93       	push	r28
 c7c:	cd b7       	in	r28, 0x3d	; 61
 c7e:	de b7       	in	r29, 0x3e	; 62

}
 c80:	cf 91       	pop	r28
 c82:	df 91       	pop	r29
 c84:	0f 90       	pop	r0
 c86:	0f be       	out	0x3f, r0	; 63
 c88:	0f 90       	pop	r0
 c8a:	1f 90       	pop	r1
 c8c:	18 95       	reti

00000c8e <GIE_voidEnable>:
#include "GIE_interface.h"
#include "GIE_register.h"


void GIE_voidEnable(void)
{
 c8e:	df 93       	push	r29
 c90:	cf 93       	push	r28
 c92:	cd b7       	in	r28, 0x3d	; 61
 c94:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG,SREG_I);
 c96:	af e5       	ldi	r26, 0x5F	; 95
 c98:	b0 e0       	ldi	r27, 0x00	; 0
 c9a:	ef e5       	ldi	r30, 0x5F	; 95
 c9c:	f0 e0       	ldi	r31, 0x00	; 0
 c9e:	80 81       	ld	r24, Z
 ca0:	80 68       	ori	r24, 0x80	; 128
 ca2:	8c 93       	st	X, r24
}
 ca4:	cf 91       	pop	r28
 ca6:	df 91       	pop	r29
 ca8:	08 95       	ret

00000caa <GIE_voidDisable>:

void GIE_voidDisable(void)
{
 caa:	df 93       	push	r29
 cac:	cf 93       	push	r28
 cae:	cd b7       	in	r28, 0x3d	; 61
 cb0:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG,SREG_I);
 cb2:	af e5       	ldi	r26, 0x5F	; 95
 cb4:	b0 e0       	ldi	r27, 0x00	; 0
 cb6:	ef e5       	ldi	r30, 0x5F	; 95
 cb8:	f0 e0       	ldi	r31, 0x00	; 0
 cba:	80 81       	ld	r24, Z
 cbc:	8f 77       	andi	r24, 0x7F	; 127
 cbe:	8c 93       	st	X, r24
}
 cc0:	cf 91       	pop	r28
 cc2:	df 91       	pop	r29
 cc4:	08 95       	ret

00000cc6 <main>:
#include "EXTI_interface.h"
#include "DIO_interface.h"
#include "GIE_interface.h"

void main (void)
{
 cc6:	df 93       	push	r29
 cc8:	cf 93       	push	r28
 cca:	cd b7       	in	r28, 0x3d	; 61
 ccc:	de b7       	in	r29, 0x3e	; 62
	DIO_voidSetPinDirection(DIO_PORTD, DIO_PIN3, DIO_PIN_INPUT);
 cce:	83 e0       	ldi	r24, 0x03	; 3
 cd0:	63 e0       	ldi	r22, 0x03	; 3
 cd2:	40 e0       	ldi	r20, 0x00	; 0
 cd4:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(DIO_PORTA, DIO_PIN4, DIO_PIN_OUTPUT);
 cd8:	80 e0       	ldi	r24, 0x00	; 0
 cda:	64 e0       	ldi	r22, 0x04	; 4
 cdc:	41 e0       	ldi	r20, 0x01	; 1
 cde:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_voidSetPinDirection>
	void fun(void);

	EXTI_voidSetCallBackInt(&fun);
 ce2:	8c e7       	ldi	r24, 0x7C	; 124
 ce4:	96 e0       	ldi	r25, 0x06	; 6
 ce6:	0e 94 de 05 	call	0xbbc	; 0xbbc <EXTI_voidSetCallBackInt>
	GIE_voidEnable();
 cea:	0e 94 47 06 	call	0xc8e	; 0xc8e <GIE_voidEnable>
	EXTI_voidEnable(EXTI_INT1, EXTI_FALLING_EDGE);  //PUSH
 cee:	81 e0       	ldi	r24, 0x01	; 1
 cf0:	61 e0       	ldi	r22, 0x01	; 1
 cf2:	0e 94 24 05 	call	0xa48	; 0xa48 <EXTI_voidEnable>
 cf6:	ff cf       	rjmp	.-2      	; 0xcf6 <main+0x30>

00000cf8 <fun>:

	}
}

void fun(void)
{
 cf8:	df 93       	push	r29
 cfa:	cf 93       	push	r28
 cfc:	cd b7       	in	r28, 0x3d	; 61
 cfe:	de b7       	in	r29, 0x3e	; 62
	DIO_voidTogglePinValue(DIO_PORTA, DIO_PIN4);
 d00:	80 e0       	ldi	r24, 0x00	; 0
 d02:	64 e0       	ldi	r22, 0x04	; 4
 d04:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <DIO_voidTogglePinValue>
}
 d08:	cf 91       	pop	r28
 d0a:	df 91       	pop	r29
 d0c:	08 95       	ret

00000d0e <_exit>:
 d0e:	f8 94       	cli

00000d10 <__stop_program>:
 d10:	ff cf       	rjmp	.-2      	; 0xd10 <__stop_program>
